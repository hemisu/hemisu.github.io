{"version":3,"file":"component---src-templates-blog-list-js-35c21d3a23de5beb9324.js","mappings":"iKAyDA,IA9CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAC3B,UAAGF,EAAKG,KAAKC,oBAAb,OAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,uBACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,sBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,uCACa,8BAASb,EAAOa,MAD7B,KAC6Cb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADhE,Q,kFCoCR,UA1EkB,SAAC,GAAqC,IAAD,EAAlChB,EAAkC,EAAlCA,KAAMiB,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7BC,GAAY,UAAAnB,EAAKG,KAAKC,oBAAV,eAAwBgB,QAAxB,QACZC,EAAQrB,EAAKsB,kBAAkBC,MAErC,GAAqB,IAAjBF,EAAMG,OACR,OACE,gBAAC,IAAD,CAAQP,SAAUA,EAAUG,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAQN,IAAQK,EAA0BP,EAA1BO,YAAaC,EAAaR,EAAbQ,SAErB,OACE,gBAAC,IAAD,CAAQT,SAAUA,EAAUG,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,sBAAIO,MAAO,CAAEC,UAAU,SACpBP,EAAMQ,KAAI,SAAAC,GACT,IAAMV,EAAQU,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE3B,UAAU,iBACV6B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYnB,KAG/B,6BAAQU,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,uBAQvB,uBAAKZ,MAAO,CAAEkB,QAAS,OAAQC,eAAgB,kBAC5CrB,EAAc,EAAI,GACjB,gBAAC,EAAAY,KAAD,CACEC,GAAI,UAAYb,EAAc,GAAM,EAAI,GAAKA,EAAc,GAC3DsB,IAAI,QAFN,SAODtB,EAAc,GAAKC,GAClB,gBAAC,EAAAW,KAAD,CAAMC,GAAI,UAAYb,EAAc,GAAIsB,IAAI,QAA5C,a","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-list.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/logo_g.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          {/* <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a> */}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n  const { currentPage, numPages } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        {currentPage - 1 > 0 && (\n          <Link\n            to={'/list/' + (currentPage - 1 === 1 ? '' : currentPage - 1)}\n            rel=\"prev\"\n          >\n            ← 上一页\n          </Link>\n        )}\n        {currentPage + 1 <= numPages && (\n          <Link to={'/list/' + (currentPage + 1)} rel=\"next\">\n            下一页 →\n          </Link>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","location","pageContext","siteTitle","title","posts","allMarkdownRemark","nodes","length","currentPage","numPages","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","display","justifyContent","rel"],"sourceRoot":""}