{
    "componentChunkName": "component---src-templates-blog-list-js",
    "path": "/list/19",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"allMarkdownRemark":{"nodes":[{"excerpt":"Shuffling is a procedure used to randomize a deck of playing cards. Because standard shuffling techniques are seen as weak, and in order to…","fields":{"slug":"/old-posts/63/"},"frontmatter":{"date":"January 22, 2017","title":"PAT A1042","description":null}},{"excerpt":"大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示： 现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。\n输入格式： 输入第1行给出正整数N（<=105），即双方交锋的次数。随后N…","fields":{"slug":"/old-posts/58/"},"frontmatter":{"date":"January 18, 2017","title":"PAT B1018","description":null}},{"excerpt":"给定一系列正整数，请按要求对数字进行分类，并输出以下5个数字： A1 = 能被5整除的数字中所有偶数的和； A2 = 将被5除后余1的数字按给出顺序进行交错求和，即计算n1-n2+n3-n4…； A3 = 被5除后余2的数字的个数； A4 = 被5除后余…","fields":{"slug":"/old-posts/56/"},"frontmatter":{"date":"January 17, 2017","title":"PAT B1012","description":null}},{"excerpt":"一个数组A中存有N（N>0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（M>=0）个位置，即将A中的数据由（A0 A1……AN-1）变换为（AN-M …… AN-1 A0 A1……AN-M-1）（最后M个数循环移至最前面的M…","fields":{"slug":"/old-posts/54/"},"frontmatter":{"date":"January 17, 2017","title":"PAT B1008","description":null}},{"excerpt":"…","fields":{"slug":"/old-posts/53/"},"frontmatter":{"date":"January 17, 2017","title":"PAT B1046","description":null}},{"excerpt":"","fields":{"slug":"/old-posts/52/"},"frontmatter":{"date":"January 17, 2017","title":"PAT B1046","description":null}},{"excerpt":"要获得一个C语言程序的运行时间，常用的方法是调用头文件time.h，其中提供了clock()函数，可以捕捉从程序开始运行到clock()被调用时所耗费的时间。这个时间单位是clock tick，即“时钟打点”。同时还有一个常数CLK_TCK…","fields":{"slug":"/old-posts/50/"},"frontmatter":{"date":"January 16, 2017","title":"PAT B1026","description":null}},{"excerpt":"正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。 现给定A、DA、B、DB，请编写程序计算PA + PB。 输入格式： 输入在一行中依次给出A、DA、B、DB…","fields":{"slug":"/old-posts/49/"},"frontmatter":{"date":"January 16, 2017","title":"PAT B1016","description":null}},{"excerpt":"给定区间[-231, 231]内的3个整数A、B和C，请判断A+B是否大于C。 输入格式： 输入第1行给出正整数T(<=10)，是测试用例的个数。随后给出T组测试用例，每组占一行，顺序给出A、B和C。整数间以空格分隔。 输出格式： 对每组测试用例，在一行中输出“Case #X…","fields":{"slug":"/old-posts/47/"},"frontmatter":{"date":"January 16, 2017","title":"PAT B1011","description":null}},{"excerpt":"卡拉兹(Callatz)猜想已经在1001中给出了描述。在这个题目里，情况稍微有些复杂。 当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对n=3进行验证的时候，我们需要计算3、5、8、4、2、1，则当我们对n=5、8、4、…","fields":{"slug":"/old-posts/46/"},"frontmatter":{"date":"January 16, 2017","title":"PAT B1005","description":null}}]}},"pageContext":{"limit":10,"skip":180,"numPages":21,"totalPages":208,"currentPage":19}},
    "staticQueryHashes": ["2841359383","3257411868"]}