{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/276/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"5b3eb8e2-a3df-5ff6-a0a1-3402981ca9ff","excerpt":"This time your job is to fill a sequence of N positive integers into a spiral matrix in non-increasing order. A spiral matrix is filled in from the first…","html":"<p>This time your job is to fill a sequence of N positive integers into a spiral matrix in non-increasing order. A spiral matrix is filled in from the first element at the upper-left corner, then move in a clockwise spiral. The matrix has m rows and n columns, where m and n satisfy the following: m*n must be equal to N; m>=n; and m-n is the minimum of all the possible values.</p>\n<p>Input Specification:</p>\n<p>Each input file contains one test case. For each case, the first line gives a positive integer N. Then the next line contains N positive integers to be filled into the spiral matrix. All the numbers are no more than 104. The numbers in a line are separated by spaces.</p>\n<p>Output Specification:</p>\n<p>For each test case, output the resulting matrix in m lines, each contains n numbers. There must be exactly 1 space between two adjacent numbers, and no extra space at the end of each line.</p>\n<p>Sample Input:\n12\n37 76 20 98 76 42 53 95 60 81 58 93\nSample Output:\n98 95 93\n42 37 81\n53 20 76\n58 60 76</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    #include &lt;stdio.h>\n    #include &lt;iostream>\n    #include &lt;algorithm>\n    using namespace std;\n    const int INF = 1000000000;\n    const int maxv = 210;\n    int N, m, n;\n    int arr[10010] = {0};\n    \n    bool cmp(int a, int b){\n    \treturn a > b;\n    }\n    int main(){\n    \t//freopen(\"in.txt\", \"r\", stdin);\n    \tscanf(\"%d\", &amp;N);\n    \tfor(int i = 0; i &lt; N; i++){\n    \t\tscanf(\"%d\", &amp;arr[i]);\n    \t}\n    \tint a, b, minDiff = INF;\n    \tfor(a = N; a > 0 ;a--){\n    \t\tif(N % a == 0){//可以整除\n    \t\t\tb = N / a;\n    \t\t\tif(b > a) break;\n    \t\t\tif(a - b &lt; minDiff &amp;&amp; a >= b){\n    \t\t\t\tminDiff = a - b;\n    \t\t\t\tm = a;\n    \t\t\t\tn = b;\n    \t\t\t}\n    \t\t}\n    \t}\n    \tsort(arr,arr+ N,cmp);\n    \tint** matrix = new int*[m];\n    \tfor(int i = 0; i &lt; m ;i++){\n    \t\tmatrix[i] = new int[n];\n    \t}\n    \tfor(int i = 0;i &lt; m; i++){\n    \t\tfor(int j = 0;j &lt; n;j++){\n    \t\t\tmatrix[i][j] = 0;\n    \t\t}\n    \t}\n    \tint i = 0, x = 0, y = 0;\n    \twhile (i &lt; N)  \n        {  \n            while (y &lt; n&amp;&amp;!matrix[x][y])  \n                matrix[x][y++] = arr[i++];  \n            y--;  \n            x++;  \n            while (x &lt; m &amp;&amp; !matrix[x][y])  \n                matrix[x++][y] = arr[i++];  \n            x--;  \n            y--;  \n            while (y >= 0 &amp;&amp; !matrix[x][y])  \n                matrix[x][y--] = arr[i++];  \n            y++;  \n            x--;  \n            while (x >= 0 &amp;&amp; !matrix[x][y])  \n                matrix[x--][y] = arr[i++];  \n            x++;  \n            y++;  \n        }\n    \tfor(int i = 0;i &lt; m; i++){\n    \t\tfor(int j = 0;j &lt; n;j++){\n    \t\t\tif(matrix[i][j]){\n    \t\t\t\tprintf(\"%d\", matrix[i][j]);\n    \t\t\t\tif(j &lt; n - 1) printf(\" \");  \n    \t\t\t}\n    \t\t}\n    \t\tprintf(\"\\n\");\n    \t}\n    \treturn 0;\n    }</code></pre></div>","tableOfContents":"","frontmatter":{"title":"PAT A1105 . Spiral Matrix (25)","date":"March 07, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/275/"},"frontmatter":{"title":"PAT A1122 . Hamiltonian Cycle (25)"}},"next":{"fields":{"slug":"/old-posts/277/"},"frontmatter":{"title":"Laravel SQLSTATE[HY000] [2002] Connection refused 错误解决"}}},"pageContext":{"id":"5b3eb8e2-a3df-5ff6-a0a1-3402981ca9ff","previousPostId":"74946297-e196-5ccd-9968-a8120beabd0f","nextPostId":"8efca139-a9b0-5e97-bec8-9fcb52acfb6f"}},
    "staticQueryHashes": ["2841359383","3257411868"]}