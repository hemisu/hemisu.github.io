{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/306/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"0f1abcc0-63f0-5610-bd7d-d639a566d382","excerpt":"本章内容 理解JSON语法 理解JSON 序列化JSON 语法 简单值： 使用与JavaScript相同的语法，可以在JSON中表示字符串、数值、布尔值和null。不支持undefined。 对象： 对象作为一种复杂数据类型，表示的是一组无序的键值对儿。 数组： 表示一组有序的值的列表。 简单值 对象 JSON…","html":"<h1 id=\"本章内容\" style=\"position:relative;\"><a href=\"#%E6%9C%AC%E7%AB%A0%E5%86%85%E5%AE%B9\" aria-label=\"本章内容 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>本章内容</h1>\n<ul>\n<li>理解JSON语法</li>\n<li>理解JSON</li>\n<li>序列化JSON</li>\n</ul>\n<!--more-->\n<h1 id=\"语法\" style=\"position:relative;\"><a href=\"#%E8%AF%AD%E6%B3%95\" aria-label=\"语法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>语法</h1>\n<ul>\n<li>简单值： 使用与JavaScript相同的语法，可以在JSON中表示字符串、数值、布尔值和null。不支持undefined。</li>\n<li>对象： 对象作为一种复杂数据类型，表示的是一组无序的键值对儿。</li>\n<li>数组： 表示一组有序的值的列表。</li>\n</ul>\n<h2 id=\"简单值\" style=\"position:relative;\"><a href=\"#%E7%AE%80%E5%8D%95%E5%80%BC\" aria-label=\"简单值 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>简单值</h2>\n<h2 id=\"对象\" style=\"position:relative;\"><a href=\"#%E5%AF%B9%E8%B1%A1\" aria-label=\"对象 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>对象</h2>\n<p>JSON中的对象与JavaScript字面量稍微有一些不同。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"Nicholas\"</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">29</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>JSON中的对象要求给属性加引号。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Nicholas\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">29</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>JSON表示上述对象的方法如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Nicholas\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">29</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"数组\" style=\"position:relative;\"><a href=\"#%E6%95%B0%E7%BB%84\" aria-label=\"数组 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>数组</h2>\n<p>JSON数组采用的就是JavaScript的数组字面量形式。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在JSON中，可以采用相同的语法表示同一个数组</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">]</span>;</code></pre></div>\n<h1 id=\"解析与序列化\" style=\"position:relative;\"><a href=\"#%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96\" aria-label=\"解析与序列化 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解析与序列化</h1>\n<p>shim：<a href=\"https://github.com/douglascrockford/JSON-js\">https://github.com/douglascrockford/JSON-js</a>\n解决不能原生支持JSON解析的浏览器。</p>\n<p>stringify()和parse()用于把JavaScript对象序列化为JSON字符串和把JSON字符串解析为原生JavaScript值。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> book <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                title<span class=\"token operator\">:</span> <span class=\"token string\">\"Professional JavaScript\"</span><span class=\"token punctuation\">,</span>\n                authors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string\">\"Nicholas C. Zakas\"</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                edition<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                year<span class=\"token operator\">:</span> <span class=\"token number\">2011</span>\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> jsonText <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"edition\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>jsonText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"序列化选项\" style=\"position:relative;\"><a href=\"#%E5%BA%8F%E5%88%97%E5%8C%96%E9%80%89%E9%A1%B9\" aria-label=\"序列化选项 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>序列化选项</h2>\n<ol>\n<li>过滤结果</li>\n</ol>\n<p>JSON.stringify()第二个参数是一个数组，其中包含两个字符串：“title”,“edition”。这两个属性与将要序列化的对象属性是对应的，因此在返回的结果字符串中，就只会包含这两种属性。</p>\n<p>如果第二个参数是函数。传入的函数接受两个参数，属性名和属性值。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> book <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                title<span class=\"token operator\">:</span> <span class=\"token string\">\"Professional JavaScript\"</span><span class=\"token punctuation\">,</span>\n                authors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string\">\"Nicholas C. Zakas\"</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                edition<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                year<span class=\"token operator\">:</span> <span class=\"token number\">2011</span>\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> jsonText <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"authors\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>\n         \n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"year\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">;</span>\n            \n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"edition\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n            \n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>jsonText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>字符串缩进</li>\n</ol>\n<p>JSON.stringify()方法的第三个参数用于控制结果中的缩进和空白符。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> book <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                title<span class=\"token operator\">:</span> <span class=\"token string\">\"Professional JavaScript\"</span><span class=\"token punctuation\">,</span>\n                authors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string\">\"Nicholas C. Zakas\"</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                edition<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                year<span class=\"token operator\">:</span> <span class=\"token number\">2011</span>\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> jsonText <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>jsonText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Professional JavaScript\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"authors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"Nicholas C. Zakas\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"edition\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"year\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2011</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"3\">\n<li>toJSON()方法</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> book <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n               <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Professional JavaScript\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"authors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string\">\"Nicholas C. Zakas\"</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                edition<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                year<span class=\"token operator\">:</span> <span class=\"token number\">2011</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function-variable function\">toJSON</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> jsonText <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>jsonText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>如果存在toJSON()方法而且能通过它取得有效的值，则调用该方法。否则，返回对象本身。</li>\n<li>如果提供了第二个参数，应用这个函数过滤器。传入函数过滤器的值是第一步返回的值。</li>\n<li>对第二步返回的每个值进行相应的序列化</li>\n<li>如果是提供了第三个参数，执行相应的格式化</li>\n</ul>\n<h2 id=\"解析选项\" style=\"position:relative;\"><a href=\"#%E8%A7%A3%E6%9E%90%E9%80%89%E9%A1%B9\" aria-label=\"解析选项 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解析选项</h2>\n<p>JSON.parse()方法可以坚守一个参数，该参数是一个函数，将在每个键值对上调用</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> book <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n               <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Professional JavaScript\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"authors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string\">\"Nicholas C. Zakas\"</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                edition<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                year<span class=\"token operator\">:</span> <span class=\"token number\">2011</span><span class=\"token punctuation\">,</span>\n                releaseDate<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2011</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> jsonText <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>jsonText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> bookCopy <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>jsonText<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">\"releaseDate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"releaseDate\"</span> <span class=\"token keyword\">in</span> bookCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E6%9C%AC%E7%AB%A0%E5%86%85%E5%AE%B9\">本章内容</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%AF%AD%E6%B3%95\">语法</a></p>\n<ul>\n<li><a href=\"#%E7%AE%80%E5%8D%95%E5%80%BC\">简单值</a></li>\n<li><a href=\"#%E5%AF%B9%E8%B1%A1\">对象</a></li>\n<li><a href=\"#%E6%95%B0%E7%BB%84\">数组</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96\">解析与序列化</a></p>\n<ul>\n<li><a href=\"#%E5%BA%8F%E5%88%97%E5%8C%96%E9%80%89%E9%A1%B9\">序列化选项</a></li>\n<li><a href=\"#%E8%A7%A3%E6%9E%90%E9%80%89%E9%A1%B9\">解析选项</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"js高程读书笔记 第20章 JSON","date":"September 06, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/305/"},"frontmatter":{"title":"js高程读书笔记 第18章 JavaScript与XML"}},"next":{"fields":{"slug":"/old-posts/307/"},"frontmatter":{"title":"js高程读书笔记 第21章 Ajax与Comet"}}},"pageContext":{"id":"0f1abcc0-63f0-5610-bd7d-d639a566d382","previousPostId":"8f85e409-c035-590f-9de3-2031060f43db","nextPostId":"24e6b5fb-bd70-5c50-9167-c3054c94bfea"}},
    "staticQueryHashes": ["2841359383","3257411868"]}