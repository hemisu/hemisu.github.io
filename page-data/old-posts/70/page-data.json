{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/70/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"9718115f-bfe7-5602-bfe1-7959c6cc3b6a","excerpt":"This time, you are supposed to find A+B where A and B are two polynomials. Input Each input file contains one test case. Each case occupies 2 lines, and each…","html":"<p>This time, you are supposed to find A+B where A and B are two polynomials.</p>\n<p>Input</p>\n<p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial: K N1 aN1 N2 aN2 … NK aNK, where K is the number of nonzero terms in the polynomial, Ni and aNi (i=1, 2, …, K) are the exponents and coefficients, respectively. It is given that 1 &#x3C;= K &#x3C;= 10，0 &#x3C;= NK &#x3C; … &#x3C; N2 &#x3C; N1 &#x3C;=1000.</p>\n<p>Output</p>\n<p>For each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.</p>\n<p>Sample Input\n2 1 2.4 0 3.2\n2 2 1.5 1 0.5\nSample Output\n3 2 1.5 1 2.9 0 3.2</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#include \"stdio.h\"\n//#include \"algorithm\"\n//using namespace std;\nint main(){\n    double a[1010] = {0};\n    int k;\n    double n;//n为系数\n    int e, count = 0;//e为指数，count计数不为零的导数项个数\n    scanf(\"%d\", &amp;k);\n    while (k--) {\n        scanf(\"%d%lf\", &amp;e, &amp;n);\n        a[e] += n;\n    }\n    scanf(\"%d\", &amp;k);\n    while (k--) {\n        scanf(\"%d%lf\", &amp;e, &amp;n);\n        a[e] += n;\n    }\n    for (int i = 0; i &lt;= 1000; i++) {\n        if (a[i] != 0) {\n            count ++;\n        }\n    }\n    printf(\"%d\", count);\n    for (int i = 1000; i >= 0; i--) {\n        if(a[i] != 0) printf(\" %d %.1lf\", i, a[i]);\n    }\n    return 0;\n}</code></pre></div>\n<p>收获：\n此题与PAT B1010一元多项式求导对比：\nB1010题需要考虑零次项的求导，且得从低次枚举到高次；\n此题需要考虑用count计数，需要在相加之后（考虑正负相加）计数；</p>","tableOfContents":"","frontmatter":{"title":"PAT A1002","date":"January 26, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/69/"},"frontmatter":{"title":"PAT B1010"}},"next":{"fields":{"slug":"/old-posts/71/"},"frontmatter":{"title":"PAT B1041"}}},"pageContext":{"id":"9718115f-bfe7-5602-bfe1-7959c6cc3b6a","previousPostId":"efff8314-f881-514c-88b6-2fad9d344f6f","nextPostId":"8c7fb56e-93cb-5043-a855-56ee5f4fe5f1"}},
    "staticQueryHashes": ["2841359383","3257411868"]}