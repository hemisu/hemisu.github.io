{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/15/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"8cba1818-3e90-5928-9db0-004eadc04c21","excerpt":"今天学生管理系统写到对班级内多用户的信息提交的时候，决定用使用input name里设置数组的形式\n首先出现了Disallowed Key Characters.（CI框架）\n查询 得到答案 这和 CI 的字符串处理类设计有关，是这样的，通过get、post方法提交的字符串，CI 都交给 system/core…","html":"<p>今天学生管理系统写到对班级内多用户的信息提交的时候，决定用使用input name里设置数组的形式\n首先出现了Disallowed Key Characters.（CI框架）\n查询 得到答案</p>\n<blockquote>\n<p>这和 CI 的字符串处理类设计有关，是这样的，通过get、post方法提交的字符串，CI 都交给 system/core/Input.php\n这个类去处理，那很多人就问了，看url并没有特殊符号，为什么也报这样的错误，因为你忽略了一点，cookie 和 session\n传输的字符串，也是由这个类统一处理的，也就是说，get、post、cookie、session 的数据都是由这个类处理的，问题往往也出现在\ncookie 和 session 上面，所以网上有很多人提供方法就是，清除一下缓存和 cookie\n，确实就没问题了，但是隔一段时间就又有问题了，因为新生成的 cookie 里面含有不被匹配通过的字符串，该怎么解决呢？\n解铃还需系铃人，既然问题出现在 Input.php 这个类上面，就修改他就好，把 _clean_input_keys 方法：</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function _clean_input_keys($str)\n{\n    if ( ! preg_match(\"/^[a-z0-9:_\\/-]+$/i\", $str))\n    {\n        exit('Disallowed Key Characters.');\n    }\n    // Clean UTF-8 if supported\n    if (UTF8_ENABLED === TRUE)\n    {\n        $str = $this->uni->clean_string($str);\n    }\n    return $str;\n}</code></pre></div>\n<blockquote>\n<p>改为：</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function _clean_input_keys($str)\n{\n    /*if ( ! preg_match(\"/^[a-z0-9:_\\/-]+$/i\", $str))\n    {\n        exit('Disallowed Key Characters.');\n    }*/\n    $config = &amp;get_config('config');  \n    if (!emptyempty($config['permitted_uri_chars']))\n    {\n        if ( ! preg_match(\"/^[\".$config['permitted_uri_chars'].\"]+$/i\", rawurlencode($str)))   \n        {   \n            exit('Disallowed Key Characters.');   \n        }  \n    }\n    // Clean UTF-8 if supported\n    if (UTF8_ENABLED === TRUE)\n    {\n        $str = $this->uni->clean_string($str);\n    }\n    return $str;\n}</code></pre></div>\n<p>然后把 config/config.php 里面的：</p>\n<p><code class=\"language-text\">$config['permitted_uri_chars'] = 'a-z 0-9~%.:_\\-';</code></p>\n<p>改为：</p>\n<p><code class=\"language-text\">$config['permitted_uri_chars'] = '';</code>\n然而并没有成功，还是出现Disallowed Key Characters.\n遂从post的提交页面入手，发现<code class=\"language-text\">name=\"zcmaster[&lt;?=$x?>]['ztyxf']\"</code>\n去掉单引号后正常，数组在html表单里的使用方法竟然与php不同。\n<a href=\"http://www.jb51.net/article/53929.htm\">php数组索引的Key加引号和不加引号的区别</a>\n<a href=\"http://www.php100.com/cover/php/18.html\">php函数库关于数组</a></p>\n<p>第二个问题：\n当checkbox里的值，勾上了两个可以用name同数组的方法传值\n问题就在不勾时，$_POST里没有出现checkbox，这样在获取数组的时候就少了一个键。</p>\n<p>解决方法：前台加隐藏域 在checkbox的前面再加一个同name的隐藏域\n问题解决</p>","tableOfContents":"","frontmatter":{"title":"post checkbox默认值","date":"August 21, 2015","description":null}},"previous":{"fields":{"slug":"/old-posts/11/"},"frontmatter":{"title":"Wish list"}},"next":{"fields":{"slug":"/old-posts/24/"},"frontmatter":{"title":"2016年9月4日"}}},"pageContext":{"id":"8cba1818-3e90-5928-9db0-004eadc04c21","previousPostId":"4dd3121f-bd56-52c1-95af-c51e89cd50d6","nextPostId":"e00efe03-a472-5614-a220-12213e4853d3"}},
    "staticQueryHashes": ["2841359383","3257411868"]}