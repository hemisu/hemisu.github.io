{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/64/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"1db4b60f-eb61-5657-98dc-f55e4cad3f63","excerpt":"The task is really simple: given N exits on a highway which forms a simple cycle, you are supposed to tell the shortest distance between any pair of exits…","html":"<p>The task is really simple: given N exits on a highway which forms a simple cycle, you are supposed to tell the shortest distance between any pair of exits.</p>\n<p>Input Specification:</p>\n<p>Each input file contains one test case. For each case, the first line contains an integer N (in [3, 105]), followed by N integer distances D1 D2 … DN, where Di is the distance between the i-th and the (i+1)-st exits, and DN is between the N-th and the 1st exits. All the numbers in a line are separated by a space. The second line gives a positive integer M (&#x3C;=104), with M lines follow, each contains a pair of exit numbers, provided that the exits are numbered from 1 to N. It is guaranteed that the total round trip distance is no more than 107.</p>\n<p>Output Specification:</p>\n<p>For each test case, print your results in M lines, each contains the shortest distance between the corresponding given pair of exits.</p>\n<p>Sample Input:\n5 1 2 4 14 9\n3\n1 3\n2 5\n4 1\nSample Output:\n3\n10\n7</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#include \"stdio.h\"\nint main(){\n    int arr[100001],ans[100001];\n    int n,m;\n    int left,right;\n    int x,y;\n    scanf(\"%d\",&amp;n);\n    for (int i = 0; i &lt; n; i++) {\n        scanf(\"%d\",&amp;arr[i]);//读入数组\n    }\n    scanf(\"%d\",&amp;m);\n    for (int j = 0; j &lt; m; j++) {\n        left = right = 0;//初始化\n        scanf(\"%d %d\", &amp;x, &amp;y);\n        for (int i = ((x - 1 + n) % n);;) {//顺时针\n            right += arr[i];\n            i = ((i + 1 + n) % n);\n            if (i == ((y - 1 + n) % n)) {\n                break;\n            }\n        }\n        for (int i = ((x - 2 + n) % n);;) {//逆时针\n            left += arr[i];\n            i = ((i - 1 + n) % n);\n            if (i == ((y - 2 + n) % n)) {\n            break;\n            }\n        }\n        ans[j] = (left > right)?right:left;\n    }\n    for (int j = 0; j &lt; m; j++) {\n        printf(\"%d\\n\", ans[j]);\n    }\n    return 0;\n}</code></pre></div>\n<p>这部分代码时间超时了，所以需要预处理一下。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#include \"stdio.h\"\n#include \"algorithm\"\nusing namespace std;\nint dis[100001],A[100001];\nint main(){\n    int sum = 0, query, n, left, right;\n    scanf(\"%d\",&amp;n);\n    for (int i = 1; i &lt;= n; i++) {\n        scanf(\"%d\", &amp;A[i]);\n        sum += A[i];\n        dis[i] = sum;\n    }\n    scanf(\"%d\", &amp;query);\n    for (int i = 0; i &lt; query; i++) {\n        scanf(\"%d%d\", &amp;left, &amp;right);\n        if (left > right) {\n            swap(left, right);\n        }\n        int temp = dis[right - 1] - dis[left - 1];\n        printf(\"%d\\n\", min(temp, sum - temp));\n    }\n    return 0;\n}</code></pre></div>","tableOfContents":"","frontmatter":{"title":"PAT A1042","date":"January 24, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/63/"},"frontmatter":{"title":"PAT A1042"}},"next":{"fields":{"slug":"/old-posts/67/"},"frontmatter":{"title":"PAT A1065"}}},"pageContext":{"id":"1db4b60f-eb61-5657-98dc-f55e4cad3f63","previousPostId":"2e0b2754-d2c6-51cf-b6d5-8d8f727d1620","nextPostId":"c430ed09-d60a-5421-98b1-1c704c5c3728"}},
    "staticQueryHashes": ["2841359383","3257411868"]}