{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/298/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"497fecb4-e219-5ae0-bab8-0f757fe342bb","excerpt":"本章内容 理解Selectors API 使用HTML5 DOM拓展 了解专有的DOM拓展 选择符API querySelector()和querySelectorAll() 其中querySelectorAll()放回的是带有所有属性和方法的NodeList…","html":"<h1 id=\"本章内容\" style=\"position:relative;\"><a href=\"#%E6%9C%AC%E7%AB%A0%E5%86%85%E5%AE%B9\" aria-label=\"本章内容 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>本章内容</h1>\n<ul>\n<li>理解Selectors API</li>\n<li>使用HTML5 DOM拓展</li>\n<li>了解专有的DOM拓展</li>\n</ul>\n<!--more-->\n<h1 id=\"选择符api\" style=\"position:relative;\"><a href=\"#%E9%80%89%E6%8B%A9%E7%AC%A6api\" aria-label=\"选择符api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>选择符API</h1>\n<p>querySelector()和querySelectorAll()</p>\n<p>其中querySelectorAll()放回的是带有所有属性和方法的NodeList，而其底层类似于一组元素的快照，而非不断对文档进行搜索的动态查询。</p>\n<p>machesSelector()方法</p>\n<p>如果调用的元素与该选择符匹配，返回true</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">matchesSelector</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elememt<span class=\"token punctuation\">,</span> selector</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>matchesSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">matchesSelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>msMatchesSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">msMatchesSelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>mozMatchesSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">mozMatchesSelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>webkitMatchesSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">webkitMatchesSelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not supported.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">matchesSelector</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span> <span class=\"token string\">'body.page1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//操作</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"元素遍历\" style=\"position:relative;\"><a href=\"#%E5%85%83%E7%B4%A0%E9%81%8D%E5%8E%86\" aria-label=\"元素遍历 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>元素遍历</h1>\n<p>IE9以及之前，元素间的空格会被认成文本节点。需要判断nodeType == 1来筛选元素。</p>\n<p>新元素遍历规范Element Traversal规范定义了一组属性</p>\n<ul>\n<li>childElementCount</li>\n<li>firstElementChild 对应firstChild元素版</li>\n<li>lastElementChild 对应lastChild元素版</li>\n<li>previousElementSibling 对应previousSibling元素版</li>\n<li>nextElementSibling 对应nextSibling元素版</li>\n</ul>\n<h1 id=\"html5\" style=\"position:relative;\"><a href=\"#html5\" aria-label=\"html5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML5</h1>\n<h2 id=\"与类相关的扩充\" style=\"position:relative;\"><a href=\"#%E4%B8%8E%E7%B1%BB%E7%9B%B8%E5%85%B3%E7%9A%84%E6%89%A9%E5%85%85\" aria-label=\"与类相关的扩充 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>与类相关的扩充</h2>\n<p>getElementsByClassName()方法接收类名，返回NodeList</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//获取所有类中包含“username”和current的元素</span>\n<span class=\"token keyword\">var</span> allCurrentUsernames <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username current\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//取得ID为myDiv元素中带有类名selected的所有元素</span>\n<span class=\"token keyword\">var</span> selected <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myDIv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selected\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"classlist属性\" style=\"position:relative;\"><a href=\"#classlist%E5%B1%9E%E6%80%A7\" aria-label=\"classlist属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>classList属性</h2>\n<p>在操作类名时，className属性添加、删除和替换类名。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bd user disabled<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//删除user类</span>\n\n<span class=\"token comment\">//取得类名字符串并拆分成数组</span>\n<span class=\"token keyword\">var</span> classNames <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//找到要删的类名</span>\n<span class=\"token keyword\">var</span> pos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    i<span class=\"token punctuation\">,</span>\n    len<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> classNames<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        pos <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//删除类名</span>\nclassNames<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//把剩下的类名拼成字符串并重新设置</span>\ndiv<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> className<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>HTML5 新增一种操作类名的方式，所有的元素添加了classList属性，是新集合类型DOMTokenList的实例。</p>\n<ul>\n<li>add(value) 将给定字符串添加到列表中</li>\n<li>contains(Value) 存在值返回true</li>\n<li>remove(value) 删除给定字符串</li>\n<li>toggle(value) 如果列表中已经存在给定的值，删除它；没有给定的值，添加它。</li>\n</ul>\n<p>前面这么多行用一行就可以代替了</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">div<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//删除\"disabled\"类</span>\ndiv<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"disabled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//添加\"添加current\"类</span>\ndiv<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//确定元素中是否包含既定的类名</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contain</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>div<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"disabled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//执行操作</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//迭代类名</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>len <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"焦点管理\" style=\"position:relative;\"><a href=\"#%E7%84%A6%E7%82%B9%E7%AE%A1%E7%90%86\" aria-label=\"焦点管理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>焦点管理</h2>\n<p>元素获得焦点的方式有页面加载、用户输入（通常tab键）和代码中调用focus()方法。</p>\n<p>默认情况下，文档刚刚加载完成时，document.activeElement中保存的是document.body元素。加载期间其值为null。</p>\n<p>新增document.hasFocus()方法用来确定文档是否获得了焦点。</p>\n<h2 id=\"htmldocument的变化\" style=\"position:relative;\"><a href=\"#htmldocument%E7%9A%84%E5%8F%98%E5%8C%96\" aria-label=\"htmldocument的变化 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTMLDocument的变化</h2>\n<h3 id=\"readystate属性\" style=\"position:relative;\"><a href=\"#readystate%E5%B1%9E%E6%80%A7\" aria-label=\"readystate属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>readyState属性</h3>\n<ul>\n<li>loading 正在加载文档</li>\n<li>complete 已经加载完文档</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">==</span> <span class=\"token string\">\"complete\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//执行操作</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"兼容模式\" style=\"position:relative;\"><a href=\"#%E5%85%BC%E5%AE%B9%E6%A8%A1%E5%BC%8F\" aria-label=\"兼容模式 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>兼容模式</h3>\n<p>标准\\混杂</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>compatMode <span class=\"token operator\">==</span> <span class=\"token string\">\"CSS1Compat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"标准模式standard\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>compatMode <span class=\"token operator\">==</span> <span class=\"token string\">\"BackCompat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"混合模式quirks\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"head属性\" style=\"position:relative;\"><a href=\"#head%E5%B1%9E%E6%80%A7\" aria-label=\"head属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>head属性</h3>\n<p>引用文档<code class=\"language-text\">&lt;head></code>元素</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> head <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>head <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"head\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"字符集属性\" style=\"position:relative;\"><a href=\"#%E5%AD%97%E7%AC%A6%E9%9B%86%E5%B1%9E%E6%80%A7\" aria-label=\"字符集属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>字符集属性</h3>\n<p>charset属性表示文档中实际使用的字符集。默认情况的值为“UTF-16”。可以通过<code class=\"language-text\">&lt;meta></code>元素，响应头部或直接设置charset属性修改这个值。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>charset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//\"UTF-16\"</span>\ndocument<span class=\"token punctuation\">.</span>charset <span class=\"token operator\">=</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>另一个值是defaultCharset，表示根据默认浏览器及操作系统的设置。</p>\n<h3 id=\"自定义数据属性\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E5%B1%9E%E6%80%A7\" aria-label=\"自定义数据属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义数据属性</h3>\n<p>HTML5规定可以为元素添加非标准的属性，但要添加前缀data-，目的是为元素提供与渲染无关的信息，或者提供语义信息。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myDiv<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-appId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>12345<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-myname</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Nicholas<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>可以通过元素的dataset属性来访问自定义属性的值。dataset属性的值是DOMStringMap的一个实例，也就是一个名值对的映射。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myDiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> appId <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>appId<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> myname <span class=\"token operator\">=</span> div<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>myname<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//设置值</span>\ndiv<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>appId <span class=\"token operator\">=</span> <span class=\"token number\">23456</span><span class=\"token punctuation\">;</span>\ndiv<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>myname <span class=\"token operator\">=</span> <span class=\"token string\">\"Nicholas\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>myname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, \"</span><span class=\"token operator\">+</span> div<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>myname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"插入标记\" style=\"position:relative;\"><a href=\"#%E6%8F%92%E5%85%A5%E6%A0%87%E8%AE%B0\" aria-label=\"插入标记 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>插入标记</h2>\n<h3 id=\"innerhtml属性\" style=\"position:relative;\"><a href=\"#innerhtml%E5%B1%9E%E6%80%A7\" aria-label=\"innerhtml属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>innerHTML属性</h3>\n<p>在写模式下，innerHTML的值会被解析为DOM子树，替换调用元素原来的所有子节点。</p>\n<p>大多数浏览器中，通过innerHTML插入<code class=\"language-text\">&lt;script></code>元素并不会执行其中的脚本。IE8及更早版本是唯一能在这种情况下执行脚本的浏览器。需要满足一、为<code class=\"language-text\">&lt;script></code>指定defer属性，二、<code class=\"language-text\">&lt;script></code>元素必须位于“有作用域的元素”，也就是在页面中看得到的元素。</p>\n<h3 id=\"outerhtml属性\" style=\"position:relative;\"><a href=\"#outerhtml%E5%B1%9E%E6%80%A7\" aria-label=\"outerhtml属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>outerHTML属性</h3>\n<p>outerHTML返回调用它的元素及所有子节点的HTML标签。</p>\n<p>使用outerHTML属性设置值，会取代原来的元素。</p>\n<h3 id=\"insertadjacenthtml方法\" style=\"position:relative;\"><a href=\"#insertadjacenthtml%E6%96%B9%E6%B3%95\" aria-label=\"insertadjacenthtml方法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>insertAdjacentHTML()方法</h3>\n<p>接收两个参数，插入位置和要插入的HTML文本。</p>\n<ul>\n<li>beforebegin 在当前元素之前插入一个紧邻的同辈元素</li>\n<li>afterbegin 在当前元素之下插入一个新的子元素或者在第一个子元素之前再插入新的子元素</li>\n<li>beforeend 在当前元素之下插入一个新的子元素或者在最后一个子元素之后再插入新的子元素</li>\n<li>afterend 在当前元素之后插入一个紧邻的同辈元素。</li>\n</ul>\n<h3 id=\"内存与性能问题\" style=\"position:relative;\"><a href=\"#%E5%86%85%E5%AD%98%E4%B8%8E%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98\" aria-label=\"内存与性能问题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>内存与性能问题</h3>\n<p>在删除带有时间处理程序或者引用了其他JavaScript对象子树时，元素与事件处理程序之间的绑定关系在内存中并没有一并删除。在使用innerHTML、outerHTML和insertAdjacentHTML()方法时，最好先手工删除要被替换的元素的所有事件处理程序和JavaScript对象属性。</p>\n<p>使用innerHTML与之前多次创建DOM节点再指定他们的关系相比，效率更高（解析器是浏览器级别的代码，通常是C++）。不过最好也能够将设置innerHTML或outerHTML的次数控制在合理的范围内。</p>\n<h3 id=\"scrollintoview方法\" style=\"position:relative;\"><a href=\"#scrollintoview%E6%96%B9%E6%B3%95\" aria-label=\"scrollintoview方法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>scrollIntoView()方法</h3>\n<p>传入true为参数，或者不传入任何参数，窗口会滚动至让调用元素的顶部与视口顶部平齐。如果传入false作为参数，调用元素会尽可能全部出现在视口中。</p>\n<h1 id=\"专有拓展\" style=\"position:relative;\"><a href=\"#%E4%B8%93%E6%9C%89%E6%8B%93%E5%B1%95\" aria-label=\"专有拓展 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>专有拓展</h1>\n<h2 id=\"文档模式\" style=\"position:relative;\"><a href=\"#%E6%96%87%E6%A1%A3%E6%A8%A1%E5%BC%8F\" aria-label=\"文档模式 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>文档模式</h2>\n<h2 id=\"children属性\" style=\"position:relative;\"><a href=\"#children%E5%B1%9E%E6%80%A7\" aria-label=\"children属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>children属性</h2>\n<h2 id=\"contains方法\" style=\"position:relative;\"><a href=\"#contains%E6%96%B9%E6%B3%95\" aria-label=\"contains方法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>contains()方法</h2>\n<p>调用这个方法的是祖先节点。这个方法接收一个参数，即要检测的后代节点。如果是后代节点则返回true。</p>\n<p>DOM Level 3 compareDocumentPosition()也能确定节点间的关系。返回一个表示该关系的位掩码。</p>\n<table>\n<thead>\n<tr>\n<th>掩码</th>\n<th>节点关系</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>无关</td>\n</tr>\n<tr>\n<td>2</td>\n<td>居前</td>\n</tr>\n<tr>\n<td>4</td>\n<td>局后</td>\n</tr>\n<tr>\n<td>8</td>\n<td>包含（给定的节点是参考节点的祖先）</td>\n</tr>\n<tr>\n<td>16</td>\n<td>被包含（给定节点是参考节点的后代）</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"插入文本\" style=\"position:relative;\"><a href=\"#%E6%8F%92%E5%85%A5%E6%96%87%E6%9C%AC\" aria-label=\"插入文本 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>插入文本</h2>\n<p>innerText属性会过滤html标签</p>\n<p>outerText属性将作用范围扩大到了包含调用它的节点之外。</p>\n<h2 id=\"滚动\" style=\"position:relative;\"><a href=\"#%E6%BB%9A%E5%8A%A8\" aria-label=\"滚动 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>滚动</h2>\n<ul>\n<li>scrollIntoViewIfNeeded(alignCenter) 如果不可见才滚动，参数设置true表示尽量将元素显示在视口中部</li>\n<li>scrollByLines() 将元素的内容滚动指定行高</li>\n<li>scrollByPages() 将元素的内容滚动指定页面高度</li>\n</ul>\n<h1 id=\"小结\" style=\"position:relative;\"><a href=\"#%E5%B0%8F%E7%BB%93\" aria-label=\"小结 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>小结</h1>\n<ul>\n<li>Selector API 提供了 querySelector()和querySelectorAll()方法</li>\n<li>Element Traversal 为DOM元素定义了额外的属性</li>\n<li>HTML5 innerHTML，管理焦点，设置字符集、页面滚动等等</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E6%9C%AC%E7%AB%A0%E5%86%85%E5%AE%B9\">本章内容</a></p>\n</li>\n<li>\n<p><a href=\"#%E9%80%89%E6%8B%A9%E7%AC%A6api\">选择符API</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%85%83%E7%B4%A0%E9%81%8D%E5%8E%86\">元素遍历</a></p>\n</li>\n<li>\n<p><a href=\"#html5\">HTML5</a></p>\n<ul>\n<li>\n<p><a href=\"#%E4%B8%8E%E7%B1%BB%E7%9B%B8%E5%85%B3%E7%9A%84%E6%89%A9%E5%85%85\">与类相关的扩充</a></p>\n</li>\n<li>\n<p><a href=\"#classlist%E5%B1%9E%E6%80%A7\">classList属性</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%84%A6%E7%82%B9%E7%AE%A1%E7%90%86\">焦点管理</a></p>\n</li>\n<li>\n<p><a href=\"#htmldocument%E7%9A%84%E5%8F%98%E5%8C%96\">HTMLDocument的变化</a></p>\n<ul>\n<li><a href=\"#readystate%E5%B1%9E%E6%80%A7\">readyState属性</a></li>\n<li><a href=\"#%E5%85%BC%E5%AE%B9%E6%A8%A1%E5%BC%8F\">兼容模式</a></li>\n<li><a href=\"#head%E5%B1%9E%E6%80%A7\">head属性</a></li>\n<li><a href=\"#%E5%AD%97%E7%AC%A6%E9%9B%86%E5%B1%9E%E6%80%A7\">字符集属性</a></li>\n<li><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E5%B1%9E%E6%80%A7\">自定义数据属性</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E6%8F%92%E5%85%A5%E6%A0%87%E8%AE%B0\">插入标记</a></p>\n<ul>\n<li><a href=\"#innerhtml%E5%B1%9E%E6%80%A7\">innerHTML属性</a></li>\n<li><a href=\"#outerhtml%E5%B1%9E%E6%80%A7\">outerHTML属性</a></li>\n<li><a href=\"#insertadjacenthtml%E6%96%B9%E6%B3%95\">insertAdjacentHTML()方法</a></li>\n<li><a href=\"#%E5%86%85%E5%AD%98%E4%B8%8E%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98\">内存与性能问题</a></li>\n<li><a href=\"#scrollintoview%E6%96%B9%E6%B3%95\">scrollIntoView()方法</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E4%B8%93%E6%9C%89%E6%8B%93%E5%B1%95\">专有拓展</a></p>\n<ul>\n<li><a href=\"#%E6%96%87%E6%A1%A3%E6%A8%A1%E5%BC%8F\">文档模式</a></li>\n<li><a href=\"#children%E5%B1%9E%E6%80%A7\">children属性</a></li>\n<li><a href=\"#contains%E6%96%B9%E6%B3%95\">contains()方法</a></li>\n<li><a href=\"#%E6%8F%92%E5%85%A5%E6%96%87%E6%9C%AC\">插入文本</a></li>\n<li><a href=\"#%E6%BB%9A%E5%8A%A8\">滚动</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E5%B0%8F%E7%BB%93\">小结</a></p>\n</li>\n</ul>","frontmatter":{"title":"js高程读书笔记 第十一章 DOM拓展","date":"August 13, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/294/"},"frontmatter":{"title":"js高程读书笔记 第十章 DOM"}},"next":{"fields":{"slug":"/old-posts/300/"},"frontmatter":{"title":"js高程读书笔记 第十二章 DOM2和DOM3"}}},"pageContext":{"id":"497fecb4-e219-5ae0-bab8-0f757fe342bb","previousPostId":"10be21de-947c-5b89-8ef4-0d85e9f880e2","nextPostId":"31575611-8cb2-531a-8384-98b4d837f1c6"}},
    "staticQueryHashes": ["2841359383","3257411868"]}