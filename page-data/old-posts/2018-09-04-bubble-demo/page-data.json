{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/2018-09-04-bubble-demo/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"888ac77a-9f2e-5b79-8f1b-fa6eaf3b6357","excerpt":"目的呢是做一个类似如图的样子 有意思就记录一下\n 配合上css的transition属性，就可以做到简单的动画效果啦 演示地址：点击查看\n// 打开控制台 数据显示更清晰","html":"<p>目的呢是做一个类似如图的样子 有意思就记录一下\n<img src=\"http://www.hemisu.com/demo/bubbleDemo.gif\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 生成一个长度为10的数组</span>\n<span class=\"token keyword\">const</span> testArr <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>length<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 一个冒泡排序？（大雾） 会返回每次的排序的移动方式 和 排序完之后的数组</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">bubble</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">testArr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> testArr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> operationList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> testArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> testArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        <span class=\"token comment\">// 记录了每次移动的方式</span>\n        operationList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          from<span class=\"token operator\">:</span> i<span class=\"token punctuation\">,</span>\n          to<span class=\"token operator\">:</span> j<span class=\"token punctuation\">,</span>\n          array<span class=\"token operator\">:</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> operationList<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 放入fragment统一插入 减少dom操作</span>\n<span class=\"token keyword\">var</span> collect <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createDocumentFragment</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> spanList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> testArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> span <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  span<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'square'</span><span class=\"token punctuation\">;</span>\n  span<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> testArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  span<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">40</span> <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">;</span>\n  spanList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> span<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 保存对各个span的引用</span>\n  collect<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>span<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ncontainer<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>collect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> result<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 定时任务</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> fromIndex <span class=\"token operator\">=</span> result<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>from<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> toIndex <span class=\"token operator\">=</span> result<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> tmp <span class=\"token operator\">=</span> spanList<span class=\"token punctuation\">[</span>toIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span>\n\n    spanList<span class=\"token punctuation\">[</span>toIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> spanList<span class=\"token punctuation\">[</span>fromIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span>\n    spanList<span class=\"token punctuation\">[</span>fromIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">[</span>spanList<span class=\"token punctuation\">[</span>toIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> spanList<span class=\"token punctuation\">[</span>fromIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>spanList<span class=\"token punctuation\">[</span>fromIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> spanList<span class=\"token punctuation\">[</span>toIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">)</span><span class=\"token comment\">//0.5秒动画 1秒延迟</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>配合上css的transition属性，就可以做到简单的动画效果啦</p>\n<p>演示地址：<a href=\"http://www.hemisu.com/demo/sortDemo.html\">点击查看</a>\n// 打开控制台 数据显示更清晰</p>","tableOfContents":"","frontmatter":{"title":"排序展示效果","date":"September 04, 2018","description":null}},"previous":{"fields":{"slug":"/old-posts/2018-07-23-unique-arr/"},"frontmatter":{"title":"复杂数组去重"}},"next":{"fields":{"slug":"/old-posts/2018-10-17-React-Components-Elements-and-Instance/"},"frontmatter":{"title":"一次打包错误 引起的对 React Components, Elements, Instance三者的认识"}}},"pageContext":{"id":"888ac77a-9f2e-5b79-8f1b-fa6eaf3b6357","previousPostId":"49ac8c75-302f-50ce-be43-4ffbca75801d","nextPostId":"1cd2496c-0ec9-5e07-a002-a91eafe5d997"}},
    "staticQueryHashes": ["2841359383","3257411868"]}