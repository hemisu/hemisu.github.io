{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/45/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"a256bdca-a5f1-5317-99b6-808cd1b3778c","excerpt":"读入n名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。 输入格式：每个测试输入包含1个测试用例，格式为 第1行：正整数n\n第2行：第1个学生的姓名 学号 成绩\n第3行：第2个学生的姓名 学号 成绩\n… … …\n第n+1行：第n个学生的姓名 学号 成绩\n其中姓名和学号均为不超过1…","html":"<p>读入n名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。</p>\n<p>输入格式：每个测试输入包含1个测试用例，格式为</p>\n<p>第1行：正整数n\n第2行：第1个学生的姓名 学号 成绩\n第3行：第2个学生的姓名 学号 成绩\n… … …\n第n+1行：第n个学生的姓名 学号 成绩\n其中姓名和学号均为不超过10个字符的字符串，成绩为0到100之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。\n输出格式：对每个测试用例输出2行，第1行是成绩最高学生的姓名和学号，第2行是成绩最低学生的姓名和学号，字符串间有1空格。</p>\n<p>输入样例：\n3\nJoe Math990112 89\nMike CS991301 100\nMary EE990830 95\n输出样例：\nMike CS991301\nJoe Math990112</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#include &lt;stdio.h>\n#include &lt;stdlib.h>\nstruct student{\n    char name[11];\n    char id[11];\n    int score;\n} *ps;\nint main(){\n    int i,n;\n    int max = -1 , min = 101;\n    int cmax = 1, cmin = 1;\n    \n    scanf(\"%d\",&amp;n);\n    if (n &lt; 0) {\n        return 0;\n    }\n    \n    ps = (struct student *)malloc(n * sizeof(struct student));\n    if (ps == NULL) {\n        return 0;\n    }\n    \n    for( i =0; i&lt;n ; i++){\n        scanf(\"%s %s %d\",ps[i].name,ps[i].id,&amp;(ps[i].score));\n    }\n    for (i = 0 ; i&lt;n; i++) {\n        if (ps[i].score &lt; min) {\n            cmin = i;\n            min = ps[i].score;\n        }\n        if (ps[i].score > max) {\n            cmax = i;\n            max = ps[i].score;\n        }\n    }\n    \n    printf(\"%s %s\\n\",ps[cmax].name,ps[cmax].id);\n    printf(\"%s %s\\n\",ps[cmin].name,ps[cmin].id);\n    return 0;\n}</code></pre></div>\n<p>算法笔记代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#include \"stdio.h\"\n//#include \"algorithm\"\n//using namespace std;\nstruct{\n    char name[15];\n    char stuid[15];\n    int score;\n} temp, ansmax, ansmin;\nint main(){\n    int max = -1,min = 101;\n    int n;\n    scanf(\"%d\", &amp;n);\n    for (int i = 0 ; i &lt; n; i++) {\n        scanf(\"%s%s%d\", temp.name, temp.stuid, &amp;temp.score);\n        if (temp.score > max) {\n            ansmax = temp;\n            max = temp.score;\n        }\n        if (temp.score &lt; min) {\n            ansmin = temp;\n            min = temp.score;\n        }\n    }\n    printf(\"%s %s\\n\", ansmax.name, ansmax.stuid);\n    printf(\"%s %s\", ansmin.name, ansmin.stuid);\n    return 0;\n}</code></pre></div>\n<p>收获：\n结构体直接赋值给ansmax,ansmin避免字符串的操作。</p>","tableOfContents":"","frontmatter":{"title":"PAT B1004","date":"January 15, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/43/"},"frontmatter":{"title":"递归应用 全排列"}},"next":{"fields":{"slug":"/old-posts/46/"},"frontmatter":{"title":"PAT B1005"}}},"pageContext":{"id":"a256bdca-a5f1-5317-99b6-808cd1b3778c","previousPostId":"d3cdbe41-1245-56af-b425-be47923d78f7","nextPostId":"a8c67ccf-8b4f-51db-a033-cc969cf31581"}},
    "staticQueryHashes": ["2841359383","3257411868"]}