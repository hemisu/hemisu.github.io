{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/121/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"384cfa4b-d8cb-5381-ad9f-45d9eec4878c","excerpt":"小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。于是小红要你帮忙判断一下，某串珠子里是否包含了全部自己想要的珠子？如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。 为方便起见，我们用[0-9]、[a-z]、[A-Z…","html":"<p>小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。于是小红要你帮忙判断一下，某串珠子里是否包含了全部自己想要的珠子？如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。</p>\n<p>为方便起见，我们用[0-9]、[a-z]、[A-Z]范围内的字符来表示颜色。例如在图1中，第3串是小红想做的珠串；那么第1串可以买，因为包含了全部她想要的珠子，还多了8颗不需要的珠子；第2串不能买，因为没有黑色珠子，并且少了一颗红色的珠子。</p>\n<p>图 1\n输入格式：</p>\n<p>每个输入包含1个测试用例。每个测试用例分别在2行中先后给出摊主的珠串和小红想做的珠串，两串都不超过1000个珠子。</p>\n<p>输出格式：</p>\n<p>如果可以买，则在一行中输出“Yes”以及有多少多余的珠子；如果不可以买，则在一行中输出“No”以及缺了多少珠子。其间以1个空格分隔。</p>\n<p>输入样例1：\nppRYYGrrYBR2258\nYrR8RrY\n输出样例1：\nYes 8\n输入样例2：\nppRYYGrrYB225\nYrR8RrY\n输出样例2：\nNo 2</p>\n<p>Eva would like to make a string of beads with her favorite colors so she went to a small shop to buy some beads. There were many colorful strings of beads. However the owner of the shop would only sell the strings in whole pieces. Hence Eva must check whether a string in the shop contains all the beads she needs. She now comes to you for help: if the answer is “Yes”, please tell her the number of extra beads she has to buy; or if the answer is “No”, please tell her the number of beads missing from the string.</p>\n<p>For the sake of simplicity, let’s use the characters in the ranges [0-9], [a-z], and [A-Z] to represent the colors. For example, the 3rd string in Figure 1 is the one that Eva would like to make. Then the 1st string is okay since it contains all the necessary beads with 8 extra ones; yet the 2nd one is not since there is no black bead and one less red bead.</p>\n<p>Figure 1\nInput Specification:</p>\n<p>Each input file contains one test case. Each case gives in two lines the strings of no more than 1000 beads which belong to the shop owner and Eva, respectively.</p>\n<p>Output Specification:</p>\n<p>For each test case, print your answer in one line. If the answer is “Yes”, then also output the number of extra beads Eva has to buy; or if the answer is “No”, then also output the number of beads missing from the string. There must be exactly 1 space between the answer and the number.</p>\n<p>Sample Input 1:\nppRYYGrrYBR2258\nYrR8RrY\nSample Output 1:\nYes 8\nSample Input 2:\nppRYYGrrYB225\nYrR8RrY\nSample Output 1:\nNo 2</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    #include \"stdio.h\"\n    //#include \"math.h\"\n    #include \"string.h\"\n    #include \"algorithm\"\n    using namespace std;\n    int hashTable[80] = {0},miss = 0;\n    int change(char c){\n        if (c >= '0' &amp;&amp; c &lt;= '9') return c - '0';\n        if (c >= 'a' &amp;&amp; c &lt;= 'z') return c - 'a' + 10;\n        if (c >= 'A' &amp;&amp; c &lt;= 'Z') return c - 'A' + 36;\n        else return -1;\n    }\n    char str1[1010], str2[1010];\n    int main(){\n        gets(str1);\n        gets(str2);\n        int len1 = (int)strlen(str1);\n        int len2 = (int)strlen(str2);\n        for (int i = 0; i &lt; len1; i++) {\n            int id = change(str1[i]);\n            hashTable[id]++;\n        }\n        for (int i = 0; i &lt; len2; i++) {\n            int id = change(str2[i]);\n            hashTable[id]--;//需要的珠子从hash表减掉\n            if (hashTable[id] &lt; 0) {\n                miss++;\n            }\n        }\n        if (miss > 0) {\n            printf(\"No %d\\n\", miss);\n        }else{\n            printf(\"Yes %d\\n\",len1 - len2);\n        }\n        return 0;\n    }</code></pre></div>","tableOfContents":"","frontmatter":{"title":"PAT B1039/A1092","date":"February 10, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/120/"},"frontmatter":{"title":"PAT B1038"}},"next":{"fields":{"slug":"/old-posts/122/"},"frontmatter":{"title":"PAT B1042"}}},"pageContext":{"id":"384cfa4b-d8cb-5381-ad9f-45d9eec4878c","previousPostId":"96444460-fd00-527d-ad7b-42b1b035e4e2","nextPostId":"c513fe39-df28-5b32-a1d8-4fbdc48d9a15"}},
    "staticQueryHashes": ["2841359383","3257411868"]}