{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/88/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"e9a343ed-622f-56bc-a29d-15b5c3bfe72d","excerpt":"一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下： 首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值Z；最后按照以下关系对应Z值与校验码M的值： Z：0 1 2 3 4 5 6…","html":"<p>一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下：</p>\n<p>首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值Z；最后按照以下关系对应Z值与校验码M的值：</p>\n<p>Z：0 1 2 3 4 5 6 7 8 9 10\nM：1 0 X 9 8 7 6 5 4 3 2</p>\n<p>现在给定一些身份证号码，请你验证校验码的有效性，并输出有问题的号码。</p>\n<p>输入格式：</p>\n<p>输入第一行给出正整数N（&#x3C;= 100）是输入的身份证号码的个数。随后N行，每行给出1个18位身份证号码。</p>\n<p>输出格式：</p>\n<p>按照输入的顺序每行输出1个有问题的身份证号码。这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。如果所有号码都正常，则输出“All passed”。</p>\n<p>输入样例1：\n4\n320124198808240056\n12010X198901011234\n110108196711301866\n37070419881216001X\n输出样例1：\n12010X198901011234\n110108196711301866\n37070419881216001X\n输入样例2：\n2\n320124198808240056\n110108196711301862\n输出样例2：\nAll passed</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#include \"stdio.h\"\n//#include \"math.h\"\n#include \"string.h\"\n//#include \"algorithm\"\n//using namespace std;\nint weight[17] = {7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2};\nchar map[11] = {'1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'};\nint main(){\n    int n;\n    scanf(\"%d\", &amp;n);\n    bool flag = true;\n    char str[20];\n    \n    for (int i = 0; i &lt; n; i++) {\n        scanf(\"%s\", str);\n        int j, last = 0;//last记录前17位加权和;\n        for (j = 0; j &lt; 17; j++) {\n            if (!( str[j] >= '0' &amp;&amp; str[j] &lt;= '9')) {\n                break;\n            }\n            last = last + (str[j] - '0') * weight[j];\n        }\n        if (j &lt; 17) {\n            flag = false;\n            printf(\"%s\\n\", str);\n        }else{\n            if (map[last % 11] != str[17]) {\n                flag = false;\n                printf(\"%s\\n\", str);\n            }\n        }\n    }\n    if (flag == true) {\n        printf(\"All passed\\n\");\n    }\n    return 0;\n}</code></pre></div>","tableOfContents":"","frontmatter":{"title":"PAT B1031","date":"February 04, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/87/"},"frontmatter":{"title":"PAT B1021"}},"next":{"fields":{"slug":"/old-posts/89/"},"frontmatter":{"title":"PAT B1002"}}},"pageContext":{"id":"e9a343ed-622f-56bc-a29d-15b5c3bfe72d","previousPostId":"5268e4a5-200b-585d-9c3f-6cce658337e0","nextPostId":"0f367b04-6a57-50cf-9bde-ba0b09e7b493"}},
    "staticQueryHashes": ["2841359383","3257411868"]}