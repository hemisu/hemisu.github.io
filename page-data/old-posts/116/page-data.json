{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/116/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"31421d2d-4631-55f4-b0cf-92140515e672","excerpt":"Given a list of N student records with name, ID and grade. You are supposed to sort the records with respect to the grade in non-increasing order, and output…","html":"<p>Given a list of N student records with name, ID and grade. You are supposed to sort the records with respect to the grade in non-increasing order, and output those student records of which the grades are in a given interval.</p>\n<p>Input Specification:</p>\n<p>Each input file contains one test case. Each case is given in the following format:</p>\n<p>N\nname[1] ID[1] grade[1]\nname[2] ID[2] grade[2]\n… …\nname[N] ID[N] grade[N]\ngrade1 grade2\nwhere name[i] and ID[i] are strings of no more than 10 characters with no space, grade[i] is an integer in [0, 100], grade1 and grade2 are the boundaries of the grade’s interval. It is guaranteed that all the grades are distinct.</p>\n<p>Output Specification:</p>\n<p>For each test case you should output the student records of which the grades are in the given interval [grade1, grade2] and are in non-increasing order. Each student record occupies a line with the student’s name and ID, separated by one space. If there is no student’s grade in that interval, output “NONE” instead.</p>\n<p>Sample Input 1:\n4\nTom CS000001 59\nJoe Math990112 89\nMike CS991301 100\nMary EE990830 95\n60 100\nSample Output 1:\nMike CS991301\nMary EE990830\nJoe Math990112\nSample Input 2:\n2\nJean AA980920 60\nAnn CS01 80\n90 95\nSample Output 2:\nNONE</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    #include \"stdio.h\"\n    //#include \"math.h\"\n    #include \"string.h\"\n    #include \"algorithm\"\n    using namespace std;\n    struct student{\n        char name[15];\n        char id[15];\n        int grade;\n    }stu[1010];\n    bool cmp(student a, student b){\n        return a.grade > b.grade;\n    }\n    int main(){\n        int n, grade1, grade2;\n        scanf(\"%d\", &amp;n);\n        for (int i = 0 ; i &lt; n; i++) {\n            scanf(\"%s%s%d\", stu[i].name, stu[i].id, &amp;stu[i].grade);\n        }\n        scanf(\"%d%d\", &amp;grade1, &amp;grade2);\n        sort(stu, stu + n, cmp);\n        int cnt = 0;\n        for (int i = 0; i &lt; n; i++) {\n            if (stu[i].grade >= grade1 &amp;&amp; stu[i].grade &lt;= grade2) {\n                printf(\"%s %s\\n\", stu[i].name, stu[i].id);\n                cnt++;\n            }\n        }\n        if (cnt == 0) {\n            printf(\"NONE\\n\");\n        }\n        return 0;\n    }</code></pre></div>\n<p>NONE后面居然还要换行符 无语。。</p>","tableOfContents":"","frontmatter":{"title":"PAT A1083","date":"February 09, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/115/"},"frontmatter":{"title":"PAT A1075"}},"next":{"fields":{"slug":"/old-posts/117/"},"frontmatter":{"title":"PAT A1080"}}},"pageContext":{"id":"31421d2d-4631-55f4-b0cf-92140515e672","previousPostId":"97eece80-71c0-5e43-b989-f8e9bd22e8c5","nextPostId":"aa6e2bf7-c6e6-50c6-8443-57faa13c0a3e"}},
    "staticQueryHashes": ["2841359383","3257411868"]}