{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/243/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"89fdc922-8891-5e96-a013-cd3add9be20b","excerpt":"Given a string, you are supposed to output the length of the longest symmetric sub-string. For example, given “Is PAT&TAP symmetric?”, the longest symmetric sub…","html":"<p>Given a string, you are supposed to output the length of the longest symmetric sub-string. For example, given “Is PAT&#x26;TAP symmetric?”, the longest symmetric sub-string is “s PAT&#x26;TAP s”, hence you must output 11.</p>\n<p>Input Specification:</p>\n<p>Each input file contains one test case which gives a non-empty string of length no more than 1000.</p>\n<p>Output Specification:</p>\n<p>For each test case, simply print the maximum length in a line.</p>\n<p>Sample Input:\nIs PAT&#x26;TAP symmetric?\nSample Output:\n11</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    #include \"stdio.h\"\n    //#include \"math.h\"\n    #include \"string.h\"\n    //#include \"iostream\"\n    //#include \"stdlib.h\"\n    //#include \"vector\"\n    //#include \"set\"\n    //#include \"map\"\n    //#include \"stack\"\n    //#include \"queue\"\n    #include \"algorithm\"\n    using namespace std;\n    \n    const int maxn = 1010;\n    char S[maxn];\n    int dp[maxn][maxn];\n    \n    int main(){\n        gets(S);\n        int len = strlen(S), ans = 1;\n        memset(dp, 0, sizeof(S));\n        //边界\n        for (int i = 0; i &lt; len; i++) {\n            dp[i][i] = 1;\n            if (i &lt; len - 1) {\n                if (S[i] == S[i + 1]) {\n                    dp[i][i + 1] = 1;\n                    ans = 2;\n                }\n            }\n        }\n        //状态转移方程\n        for (int L = 3; L &lt;= len; L++) {\n            for (int i = 0; i + L - 1 &lt; len; i++) {//枚举子串的起始结点\n                int j = i + L - 1;//子串右结点\n                if (S[i] == S[j] &amp;&amp; dp[i + 1][j - 1] == 1) {\n                    dp[i][j] = 1;\n                    ans = L;//更新最长回文子串长度\n                }\n            }\n        }\n        printf(\"%d\\n\", ans);\n        return 0;\n    }\n</code></pre></div>","tableOfContents":"","frontmatter":{"title":"PAT A1040 . Longest Symmetric String (25)","date":"February 28, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/240/"},"frontmatter":{"title":"PAT A1045 . Favorite Color Stripe (30)"}},"next":{"fields":{"slug":"/old-posts/244/"},"frontmatter":{"title":"2.28模拟题 problem2 进击的二叉查找树"}}},"pageContext":{"id":"89fdc922-8891-5e96-a013-cd3add9be20b","previousPostId":"1ae444d7-00bc-578b-bcf4-ba3f0fc9dd54","nextPostId":"53578c83-781e-5591-881b-0caf94b81d11"}},
    "staticQueryHashes": ["2841359383","3257411868"]}