{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/105/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"301fe89d-a4dd-5ace-a409-7aff4cf5c8df","excerpt":"宋代史学家司马光在《资治通鉴》中有一段著名的“德才论”：“是故才德全尽谓之圣人，才德兼亡谓之愚人，德胜才谓之君子，才胜德谓之小人。凡取人之术，苟不得圣人，君子而与之，与其得小人，不若得愚人。” 现给出一批考生的德才分数，请根据司马光的理论给出录取排名。 输入格式： 输入第1行给出3个正整数，分别为：N（<=10…","html":"<p>宋代史学家司马光在《资治通鉴》中有一段著名的“德才论”：“是故才德全尽谓之圣人，才德兼亡谓之愚人，德胜才谓之君子，才胜德谓之小人。凡取人之术，苟不得圣人，君子而与之，与其得小人，不若得愚人。”</p>\n<p>现给出一批考生的德才分数，请根据司马光的理论给出录取排名。</p>\n<p>输入格式：</p>\n<p>输入第1行给出3个正整数，分别为：N（&#x3C;=105），即考生总数；L（>=60），为录取最低分数线，即德分和才分均不低于L的考生才有资格被考虑录取；H（&#x3C;100），为优先录取线——德分和才分均不低于此线的被定义为“才德全尽”，此类考生按德才总分从高到低排序；才分不到但德分到线的一类考生属于“德胜才”，也按总分排序，但排在第一类考生之后；德才分均低于H，但是德分不低于才分的考生属于“才德兼亡”但尚有“德胜才”者，按总分排序，但排在第二类考生之后；其他达到最低线L的考生也按总分排序，但排在第三类考生之后。</p>\n<p>随后N行，每行给出一位考生的信息，包括：准考证号、德分、才分，其中准考证号为8位整数，德才分为区间[0, 100]内的整数。数字间以空格分隔。</p>\n<p>输出格式：</p>\n<p>输出第1行首先给出达到最低分数线的考生人数M，随后M行，每行按照输入格式输出一位考生的信息，考生按输入中说明的规则从高到低排序。当某类考生中有多人总分相同时，按其德分降序排列；若德分也并列，则按准考证号的升序输出。</p>\n<p>输入样例：\n14 60 80\n10000001 64 90\n10000002 90 60\n10000011 85 80\n10000003 85 80\n10000004 80 85\n10000005 82 77\n10000006 83 76\n10000007 90 78\n10000008 75 79\n10000009 59 90\n10000010 88 45\n10000012 80 100\n10000013 90 99\n10000014 66 60\n输出样例：\n12\n10000013 90 99\n10000012 80 100\n10000003 85 80\n10000011 85 80\n10000004 80 85\n10000007 90 78\n10000006 83 76\n10000005 82 77\n10000002 90 60\n10000014 66 60\n10000008 75 79\n10000001 64 90</p>\n<p>About 900 years ago, a Chinese philosopher Sima Guang wrote a history book in which he talked about people’s talent and virtue. According to his theory, a man being outstanding in both talent and virtue must be a “sage（圣人）”; being less excellent but with one’s virtue outweighs talent can be called a “nobleman（君子）”; being good in neither is a “fool man（愚人）”; yet a fool man is better than a “small man（小人）” who prefers talent than virtue.</p>\n<p>Now given the grades of talent and virtue of a group of people, you are supposed to rank them according to Sima Guang’s theory.</p>\n<p>Input Specification:</p>\n<p>Each input file contains one test case. Each case first gives 3 positive integers in a line: N (&#x3C;=105), the total number of people to be ranked; L (>=60), the lower bound of the qualified grades — that is, only the ones whose grades of talent and virtue are both not below this line will be ranked; and H (&#x3C;100), the higher line of qualification — that is, those with both grades not below this line are considered as the “sages”, and will be ranked in non-increasing order according to their total grades. Those with talent grades below H but virtue grades not are cosidered as the “noblemen”, and are also ranked in non-increasing order according to their total grades, but they are listed after the “sages”. Those with both grades below H, but with virtue not lower than talent are considered as the “fool men”. They are ranked in the same way but after the “noblemen”. The rest of people whose grades both pass the L line are ranked after the “fool men”.</p>\n<p>Then N lines follow, each gives the information of a person in the format:</p>\n<p>ID_Number Virtue_Grade Talent_Grade\nwhere ID_Number is an 8-digit number, and both grades are integers in [0, 100]. All the numbers are separated by a space.\nOutput Specification:</p>\n<p>The first line of output must give M (&#x3C;=N), the total number of people that are actually ranked. Then M lines follow, each gives the information of a person in the same format as the input, according to the ranking rules. If there is a tie of the total grade, they must be ranked with respect to their virtue grades in non-increasing order. If there is still a tie, then output in increasing order of their ID’s.</p>\n<p>Sample Input:\n14 60 80\n10000001 64 90\n10000002 90 60\n10000011 85 80\n10000003 85 80\n10000004 80 85\n10000005 82 77\n10000006 83 76\n10000007 90 78\n10000008 75 79\n10000009 59 90\n10000010 88 45\n10000012 80 100\n10000013 90 99\n10000014 66 60\nSample Output:\n12\n10000013 90 99\n10000012 80 100\n10000003 85 80\n10000011 85 80\n10000004 80 85\n10000007 90 78\n10000006 83 76\n10000005 82 77\n10000002 90 60\n10000014 66 60\n10000008 75 79\n10000001 64 90</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    #include \"stdio.h\"\n    //#include \"math.h\"\n    #include \"string.h\"\n    #include \"algorithm\"\n    using namespace std;\n    struct person{\n        char id[15];\n        int virtue, talent, sum;\n        int flag;//类别排序 1：圣人 sage 2：君子 nobleman 3：愚人 foolman 4：小人 smallman 5：不及格\n    }people[100010];\n    bool cmp (person a, person b){\n        if (a.flag != b.flag) return a.flag &lt; b.flag;\n        else if (a.sum != b.sum) return a.sum > b.sum;\n        else if (a.virtue != b.virtue) return a.virtue > b.virtue;\n        else return strcmp(a.id, b.id) &lt; 0;\n    }\n    int main(){\n        int n, l, h;\n        scanf(\"%d%d%d\", &amp;n, &amp;l, &amp;h);\n        int m = n;//及格人数\n        for (int i = 0 ; i &lt; n; i++) {\n            scanf(\"%s%d%d\", people[i].id, &amp;people[i].virtue, &amp;people[i].talent);\n            people[i].sum = people[i].virtue + people[i].talent;\n            if(people[i].virtue &lt; l || people[i].talent &lt; l) {people[i].flag = 5;m--;}\n            else if (people[i].talent >= h &amp;&amp; people[i].virtue >= h) people[i].flag = 1;\n            //those with both grades not below this line are considered as the \"sages\"\n            else if (people[i].virtue >= h &amp;&amp; people[i].talent >= l &amp;&amp; people[i].talent &lt; h) people[i].flag = 2;\n            //Those with talent grades below H but virtue grades not are cosidered as the \"noblemen\"\n            else if (people[i].virtue >= people[i].talent) people[i].flag = 3;\n            //Those with both grades below H, but with virtue not lower than talent are considered as the \"fool men\".\n            else people[i].flag = 4;\n        }\n        sort(people, people + n, cmp);\n        printf(\"%d\\n\", m);\n        for (int i = 0; i &lt; m; i++) {\n            printf(\"%s %d %d\\n\", people[i].id, people[i].virtue, people[i].talent);\n        }\n        \n        return 0;\n    }</code></pre></div>\n<p>收获：\n其中准考证号为8位整数,如果用int 或者long long都会显示段错误，所以得使用char来保存id</p>","tableOfContents":"","frontmatter":{"title":"PAT B1015/A1062","date":"February 08, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/104/"},"frontmatter":{"title":"PAT B1040/A1093"}},"next":{"fields":{"slug":"/old-posts/107/"},"frontmatter":{"title":"PAT A1012"}}},"pageContext":{"id":"301fe89d-a4dd-5ace-a409-7aff4cf5c8df","previousPostId":"ae388a17-dbc4-5748-9ebf-b14a4dd87082","nextPostId":"ab79a920-87d6-597d-859a-7dc1a766ee60"}},
    "staticQueryHashes": ["2841359383","3257411868"]}