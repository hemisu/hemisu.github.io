{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/267/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"773f5b58-79c0-5b2b-bc12-b7857885ed3a","excerpt":"John got a full mark on PAT. He was so happy that he decided to hold a raffle（抽奖） for his followers on Weibo — that is, he would select winners from every N…","html":"<p>John got a full mark on PAT. He was so happy that he decided to hold a raffle（抽奖） for his followers on Weibo — that is, he would select winners from every N followers who forwarded his post, and give away gifts. Now you are supposed to help him generate the list of winners.</p>\n<p><strong>Input Specification:</strong></p>\n<p>Each input file contains one test case. For each case, the first line gives three positive integers M (&#x3C;= 1000), N and S, being the total number of forwards, the skip number of winners, and the index of the first winner (the indices start from 1). Then M lines follow, each gives the nickname (a nonempty string of no more than 20 characters, with no white space or return) of a follower who has forwarded John’s post.</p>\n<p>Note: it is possible that someone would forward more than once, but no one can win more than once. Hence if the current candidate of a winner has won before, we must skip him/her and consider the next one.</p>\n<p><strong>Output Specification:</strong></p>\n<p>For each case, print the list of winners in the same order as in the input, each nickname occupies a line. If there is no winner yet, print “Keep going…” instead.</p>\n<p><strong>Sample Input 1:</strong>\n9 3 2\nImgonnawin!\nPickMe\nPickMeMeMeee\nLookHere\nImgonnawin!\nTryAgainAgain\nTryAgainAgain\nImgonnawin!\nTryAgainAgain\n<strong>Sample Output 1:</strong>\nPickMe\nImgonnawin!\nTryAgainAgain\n<strong>Sample Input 2:</strong>\n2 3 5\nImgonnawin!\nPickMe\n<strong>Sample Output 2:</strong>\nKeep going…</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    #include &lt;stdio.h>\n    #include &lt;iostream>\n    #include &lt;algorithm>\n    #include &lt;string.h>\n    #include &lt;string>\n    #include &lt;queue>\n    #include &lt;set>\n    #include &lt;map>\n    using namespace std;\n    int m, n, s;\n    string temp;\n    vector&lt;string> str;\n    map&lt;string, int> mp;\n    int main(){\n      //freopen(\"in.txt\", \"r\", stdin);\n    \n      scanf(\"%d%d%d\", &amp;m, &amp;n, &amp;s);\n      str.resize(m);\n      if(s>m){ printf(\"Keep going...\\n\"); return 0;}\n      for (int i = 0; i &lt; m; i++){\n        cin>>str[i];\n      }\n      int t = s - 1;\n      while(t &lt; m){\n        if(mp[str[t]] != 1){\n          mp[str[t]] = 1;\n          cout&lt;&lt;str[t]&lt;&lt;endl;\n          t+= n;\n        }else{\n          t++;  \n        }         \n      }\n      return 0;\n    \n    }</code></pre></div>","tableOfContents":"","frontmatter":{"title":"PAT A1124 . Raffle for Weibo Followers (20)","date":"March 05, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/260/"},"frontmatter":{"title":"PAT A1116 . Come on! Let's C (20)"}},"next":{"fields":{"slug":"/old-posts/269/"},"frontmatter":{"title":"PAT A1125 . Chain the Ropes (25)"}}},"pageContext":{"id":"773f5b58-79c0-5b2b-bc12-b7857885ed3a","previousPostId":"c9de0df9-88e0-5e22-9ba7-eab0e0e8fb0d","nextPostId":"ad54a05f-09f3-5bdf-b0b3-4b4d36fefdc6"}},
    "staticQueryHashes": ["2841359383","3257411868"]}