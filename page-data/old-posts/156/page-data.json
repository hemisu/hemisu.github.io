{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/156/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"eb896522-115b-56ff-8064-625ef29d06d6","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    #include \"stdio.h\"\n    //#include \"math.h\"\n    //#include \"string.h\"\n    //#include \"iostream\"\n    #include \"algorithm\"\n    using namespace std;\n    struct bign{\n        int d[1000];\n        int len;\n        bign(){\n            memset(d,0,sizeof(d));\n            len = 0;\n        }\n    };\n    bign change(char str[]){\n        bign a;\n        a.len = strlen(str);\n        for(int i = 0; i &lt; a.len ; i++){\n            a.d[i] = str[a.len - i - 1] - '0';\n        }\n        return a;\n    }\n    bign add(bign a,bign b){\n        bign c;\n        int carry = 0;//进位\n        for(int i = 0; i &lt; a.len || i &lt; b.len; i++){\n            int temp = a.d[i] + b.d[i] + carry;\n            c.d[c.len++] = temp % 10;\n            carry = temp / 10;\n        }\n        if (carry != 0 ) {\n            c.d[c.len++] = carry;\n        }\n        return c;\n    }\n    bign sub(bign a,bign b){\n        bign c;\n        for (int i = 0; i &lt; a.len || i &lt; b .len; i++) {\n            //以较长的为界限\n            if (a.d[i] &lt; b.d[i]) {\n                a.d[i + 1]--;//借位\n                a.d[i]+=10;\n            }\n            c.d[c.len++] = a.d[i] - b.d[i];//减法的结果为当前位结果\n        }\n        while (c.len - 1 >= 1 &amp;&amp; c.d[c.len - 1] == 0) {\n            c.len--;//去除最高位的0\n        }\n        return c;\n    }\n    bign multi(bign a, int b){\n        bign c;\n        int carry = 0;//进位\n        for (int i = 0; i &lt; a.len; i++) {\n            int temp = a.d[i] * b + carry;\n            c.d[c.len++] = temp % 10;//个位作为该位结果\n            carry = temp / 10;//高位部分作为新的进位\n        }\n        while (carry != 0) {\n            //和加法不一样，乘法的进位可能不止一位，因此用while\n            c.d[c.len++] = carry % 10;\n            carry /= 10;\n        }\n        return c;\n    }\n    bign divide (bign a,int b, int &amp;r){//高精度除法，r为余数\n        bign c;\n        c.len = a.len;//被除数的每一位和商的每一位是一一对应的，因此先令长度相等\n        for (int i = a.len - 1; i >= 0; i--) {\n            r = r * 10 + a.d[i];//和上一位遗留的余数组合\n            if (r &lt; b) c.d[i] = 0; //不够除，该位为0\n            else {\n                //够除\n                c.d[i] = r / b;//商\n                r = r % b;//获得新的余数\n            }\n        }\n        while (c.len - 1 >= 1 &amp;&amp; c.d[c.len - 1] == 0) {\n            c.len--;//去除高位的0，同时至少保留一位的最低位\n        }\n        return c;\n    }\n    void print(bign a){\n        for (int i = a.len - 1; i >= 0; i--) {\n            printf(\"%d\", a.d[i]);\n        }\n    }\n    int main(){\n        char str1[1000], str2[1000];\n        int b;\n        scanf(\"%s%d\", str1, &amp;b);\n        bign a = change(str1);\n    //    bign b = change(str2);\n        int r;\n        print(divide(a, b, r));\n        return 0;\n    }\n</code></pre></div>","tableOfContents":"","frontmatter":{"title":"大整数四则运算","date":"February 14, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/155/"},"frontmatter":{"title":"PAT A1059"}},"next":{"fields":{"slug":"/old-posts/160/"},"frontmatter":{"title":"PAT B1049/A1104"}}},"pageContext":{"id":"eb896522-115b-56ff-8064-625ef29d06d6","previousPostId":"fdc75508-7885-5c2f-90fa-5c604702d509","nextPostId":"12846439-4f81-51ba-9394-374d1f071c54"}},
    "staticQueryHashes": ["2841359383","3257411868"]}