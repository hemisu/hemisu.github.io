{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/113/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"a148318b-ee3a-5dae-9e52-4454d3476348","excerpt":"Excel can sort records according to any column. Now you are supposed to imitate this function. Input Each input file contains one test case. For each case, the…","html":"<p>Excel can sort records according to any column. Now you are supposed to imitate this function.</p>\n<p>Input</p>\n<p>Each input file contains one test case. For each case, the first line contains two integers N (&#x3C;=100000) and C, where N is the number of records and C is the column that you are supposed to sort the records with. Then N lines follow, each contains a record of a student. A student’s record consists of his or her distinct ID (a 6-digit number), name (a string with no more than 8 characters without space), and grade (an integer between 0 and 100, inclusive).</p>\n<p>Output</p>\n<p>For each test case, output the sorting result in N lines. That is, if C = 1 then the records must be sorted in increasing order according to ID’s; if C = 2 then the records must be sorted in non-decreasing order according to names; and if C = 3 then the records must be sorted in non-decreasing order according to grades. If there are several students who have the same name or grade, they must be sorted according to their ID’s in increasing order.</p>\n<p>Sample Input 1\n3 1\n000007 James 85\n000010 Amy 90\n000001 Zoe 60\nSample Output 1\n000001 Zoe 60\n000007 James 85\n000010 Amy 90\nSample Input 2\n4 2\n000007 James 85\n000010 Amy 90\n000001 Zoe 60\n000002 James 98\nSample Output 2\n000010 Amy 90\n000002 James 98\n000007 James 85\n000001 Zoe 60\nSample Input 3\n4 3\n000007 James 85\n000010 Amy 90\n000001 Zoe 60\n000002 James 90\nSample Output 3\n000001 Zoe 60\n000007 James 85\n000002 James 90\n000010 Amy 90</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    #include \"stdio.h\"\n    //#include \"math.h\"\n    #include \"string.h\"\n    #include \"algorithm\"\n    using namespace std;\n    struct person{\n        char id[10];\n        char name[10];\n        int score;\n    }stu[100010],temp;\n    bool cmpbyid(person a, person b){\n        return strcmp(a.id, b.id) &lt; 0;\n    }\n    bool cmpbyname(person a, person b){\n        if (strcmp(a.name, b.name) != 0) {\n            return strcmp(a.name, b.name) &lt; 0;\n        }else{\n            return strcmp(a.id, b.id) &lt; 0;\n        }\n    }\n    bool cmpbyscore(person a, person b){\n        if (a.score != b.score) {\n            return a.score &lt; b.score;\n        }else{\n            return strcmp(a.id, b.id) &lt; 0;\n        }\n    }\n    \n    int main(){\n        int n, c;\n        scanf(\"%d%d\", &amp;n, &amp;c);\n        for (int i = 0 ; i &lt; n ; i++) {\n            scanf(\"%s%s%d\", stu[i].id, stu[i].name, &amp;stu[i].score);\n        }\n        if (c == 1) {\n            sort(stu, stu + n , cmpbyid);\n        }else if (c ==2){\n            sort(stu, stu + n , cmpbyname);\n        }else{\n            sort(stu, stu + n , cmpbyscore);\n        }\n        for (int i = 0 ; i &lt; n ; i++) {\n            printf(\"%s %s %d\\n\", stu[i].id, stu[i].name, stu[i].score);\n        }\n        return 0;\n    }</code></pre></div>","tableOfContents":"","frontmatter":{"title":"PAT A1028","date":"February 09, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/110/"},"frontmatter":{"title":"PAT A1025"}},"next":{"fields":{"slug":"/old-posts/114/"},"frontmatter":{"title":"PAT A1055"}}},"pageContext":{"id":"a148318b-ee3a-5dae-9e52-4454d3476348","previousPostId":"1b8a064c-d10d-5bec-80ce-50e960f8ddaf","nextPostId":"7d9c1389-4947-53f9-a1f3-b3ec9c6499cb"}},
    "staticQueryHashes": ["2841359383","3257411868"]}