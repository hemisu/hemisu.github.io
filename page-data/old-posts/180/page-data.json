{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/180/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"e8269d92-7af8-5c14-ae85-346e23a572f2","excerpt":"Zhejiang University has 40000 students and provides 2500 courses. Now given the registered course list of each student, you are supposed to output the student…","html":"<p>Zhejiang University has 40000 students and provides 2500 courses. Now given the registered course list of each student, you are supposed to output the student name lists of all the courses.</p>\n<p>Input Specification:</p>\n<p>Each input file contains one test case. For each case, the first line contains 2 numbers: N (&#x3C;=40000), the total number of students, and K (&#x3C;=2500), the total number of courses. Then N lines follow, each contains a student’s name (3 capital English letters plus a one-digit number), a positive number C (&#x3C;=20) which is the number of courses that this student has registered, and then followed by C course numbers. For the sake of simplicity, the courses are numbered from 1 to K.</p>\n<p>Output Specification:</p>\n<p>For each test case, print the student name lists of all the courses in increasing order of the course numbers. For each course, first print in one line the course number and the number of registered students, separated by a space. Then output the students’ names in alphabetical order. Each name occupies a line.</p>\n<p>Sample Input:\n10 5\nZOE1 2 4 5\nANN0 3 5 2 1\nBOB5 5 3 4 2 1 5\nJOE4 1 2\nJAY9 4 1 2 5 4\nFRA8 3 4 2 5\nDON2 2 4 5\nAMY7 1 5\nKAT3 3 5 4 2\nLOR6 4 2 4 1 5\nSample Output:\n1 4\nANN0\nBOB5\nJAY9\nLOR6\n2 7\nANN0\nBOB5\nFRA8\nJAY9\nJOE4\nKAT3\nLOR6\n3 1\nBOB5\n4 7\nBOB5\nDON2\nFRA8\nJAY9\nKAT3\nLOR6\nZOE1\n5 9\nAMY7\nANN0\nBOB5\nDON2\nFRA8\nJAY9\nKAT3\nLOR6\nZOE1</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    #include \"stdio.h\"\n    //#include \"math.h\"\n    #include \"string.h\"\n    //#include \"iostream\"\n    //#include \"stdlib.h\"\n    #include \"algorithm\"\n    #include \"vector\"\n    using namespace std;\n    //typedef long long LL;\n    const int maxn = 40010;//最大学生人数\n    const int maxk = 2510;//最大课程门数\n    \n    char name[maxn][5];//maxn个学生\n    vector&lt;int> course[maxk];//couse[i]存放第i门课的所有学生编号\n    \n    bool cmp(int a, int b){\n        return strcmp(name[a], name[b]) &lt; 0;//按姓名字典序从小到大排序\n    }\n    int main(){\n        int n, k;\n        scanf(\"%d%d\", &amp;n, &amp;k);\n        for (int i = 0; i &lt; n; i++) {\n            int c, kc;\n            scanf(\"%s %d\", name[i], &amp;c);\n            for (int j = 0; j &lt; c ; j++) {\n                scanf(\"%d\", &amp;kc);\n                course[kc].push_back(i);//读入一门课就把学生的ID写入课程之下\n            }\n        }\n        for (int i = 1; i &lt;= k ; i++) {\n            printf(\"%d %d\\n\", i, course[i].size());\n            sort(course[i].begin(), course[i].begin() + course[i].size(), cmp);//名字从小到大排序\n            for (int j = 0; j &lt; course[i].size(); j++) {\n                printf(\"%s\\n\", name[course[i][j]]);\n            }\n        }\n        \n        return 0;\n    }</code></pre></div>\n<p>1、使用vector来存放每门课程的选课学生编号，可以有效防止所有学生选了所有课程的极端情况导致空间超限。而且vector的使用十分简便。\n2、小技巧：如果排序时直接对字符串排序，那么会导致大量的字符串移动，非常消耗时间。\n本题的做法是让二维数组char[n][5]存放输入的姓名，其中char[i]表示第i个姓名，在编写cmp函数的时候，每次输出课程下的学生时再按照字典序重新排序即可。\n3、strcmp的返回值不一定是-1，0，+1，也有可能是其他正数和负数。所以这里写strcmp(name[a], name[b]) &#x3C; 0更具有普适性。</p>","tableOfContents":"","frontmatter":{"title":"PAT A1047","date":"February 20, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/179/"},"frontmatter":{"title":"PAT A1039"}},"next":{"fields":{"slug":"/old-posts/181/"},"frontmatter":{"title":"PAT A1063"}}},"pageContext":{"id":"e8269d92-7af8-5c14-ae85-346e23a572f2","previousPostId":"cae8af7b-e4c4-5647-9d02-cd484e543a7c","nextPostId":"db92e5fc-38b6-58b1-9481-48a8b095387e"}},
    "staticQueryHashes": ["2841359383","3257411868"]}