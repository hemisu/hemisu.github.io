{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/169/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"a56adc8f-8cfd-5041-98e9-37804e50f5eb","excerpt":"A reversible prime in any number system is a prime whose “reverse” in that number system is also a prime. For example in the decimal system 73 is a reversible…","html":"<p>A reversible prime in any number system is a prime whose “reverse” in that number system is also a prime. For example in the decimal system 73 is a reversible prime because its reverse 37 is also a prime.</p>\n<p>Now given any two positive integers N (&#x3C; 105) and D (1 &#x3C; D &#x3C;= 10), you are supposed to tell if N is a reversible prime with radix D.</p>\n<p>Input Specification:</p>\n<p>The input file consists of several test cases. Each case occupies a line which contains two integers N and D. The input is finished by a negative N.</p>\n<p>Output Specification:</p>\n<p>For each test case, print in one line “Yes” if N is a reversible prime with radix D, or “No” if not.</p>\n<p>Sample Input:\n73 10\n23 2\n23 10\n-2\nSample Output:\nYes\nYes\nNo</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    #include \"stdio.h\"\n    #include \"math.h\"\n    //#include \"string.h\"\n    //#include \"iostream\"\n    //#include \"stdlib.h\"\n    #include \"algorithm\"\n    using namespace std;\n    const int maxn = 1000001;\n    bool isPrime(int n){\n        if(n &lt;= 1) return false;\n        int sqr = (int)sqrt(1.0 * n);\n        for (int i = 2; i &lt;= sqr; i++) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    int d[111];\n    int main(){\n        int n, radix;\n        while (scanf(\"%d\", &amp;n) != EOF) {\n            if (n &lt; 0) {\n                break;\n            }\n            scanf(\"%d\", &amp;radix);\n            if (isPrime(n) == false) {\n                printf(\"No\\n\");\n            }else{\n                int len = 0;\n                do{\n                    d[len++] = n % radix;\n                    n /= radix;\n                }while(n);\n                for (int i = 0; i &lt; len; i++) {\n                    n = n * radix + d[i];\n                }\n                if(isPrime(n)) printf(\"Yes\\n\");\n                else printf(\"No\\n\");\n            }\n        }\n        return 0;\n    }</code></pre></div>","tableOfContents":"","frontmatter":{"title":"PAT A1015","date":"February 17, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/167/"},"frontmatter":{"title":"PAT B1007"}},"next":{"fields":{"slug":"/old-posts/170/"},"frontmatter":{"title":"PAT A1078"}}},"pageContext":{"id":"a56adc8f-8cfd-5041-98e9-37804e50f5eb","previousPostId":"ae6b9e46-be99-5a45-b30f-a72ed8a9799b","nextPostId":"b53164b1-8f27-5884-a1d5-b1e7ff249021"}},
    "staticQueryHashes": ["2841359383","3257411868"]}