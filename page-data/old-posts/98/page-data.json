{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/98/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"47d72412-4f82-5927-a134-77f6ca49ce7e","excerpt":"Calculate a + b and output the sum in standard format — that is, the digits must be separated into groups of three by commas (unless there are less than four…","html":"<p>Calculate a + b and output the sum in standard format — that is, the digits must be separated into groups of three by commas (unless there are less than four digits).</p>\n<p>Input</p>\n<p>Each input file contains one test case. Each case contains a pair of integers a and b where -1000000 &#x3C;= a, b &#x3C;= 1000000. The numbers are separated by a space.</p>\n<p>Output</p>\n<p>For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.</p>\n<p>Sample Input\n-1000000 9\nSample Output\n-999,991</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#include \"stdio.h\"\n//#include \"math.h\"\n#include \"string.h\"\n//#include \"algorithm\"\n//using namespace std;\nint main(){\n    int a,b,sum;\n    scanf(\"%d%d\", &amp;a, &amp;b);\n    sum = a + b;\n    if (sum &lt; 0) {\n        printf(\"-\");\n        sum = -sum;\n    }\n    int ans[31], top = 0;\n    do{\n        ans[top++] = sum % 10;\n        sum /= 10;\n    }while (sum != 0);\n    for (int i = top - 1; i >= 0 ; i--) {\n        printf(\"%d\", ans[i]);\n        if (i > 0 &amp;&amp; i % 3 == 0) {\n            printf(\",\");//每3位一个逗号，0位除外\n        }\n    }\n    return 0;\n}</code></pre></div>","tableOfContents":"","frontmatter":{"title":"PAT A1001","date":"February 06, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/97/"},"frontmatter":{"title":"PAT B1048"}},"next":{"fields":{"slug":"/old-posts/99/"},"frontmatter":{"title":"PAT A1005"}}},"pageContext":{"id":"47d72412-4f82-5927-a134-77f6ca49ce7e","previousPostId":"5a8dba50-d68e-5325-89cf-961873f0cc30","nextPostId":"b2be61c6-05f2-5130-868f-4c0a89ba1766"}},
    "staticQueryHashes": ["2841359383","3257411868"]}