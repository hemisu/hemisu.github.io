{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/128/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"924861d7-443d-53f2-9ced-f2d1a9b01e71","excerpt":"给定数字0-9各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意0不能做首位）。例如：给定两个0，两个1，三个5，一个8，我们得到的最小的数就是10015558。 现给定数字，请编写程序输出能够组成的最小的数。 输入格式： 每个输入包含1个测试用例。每个测试用例在一行中给出1…","html":"<p>给定数字0-9各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意0不能做首位）。例如：给定两个0，两个1，三个5，一个8，我们得到的最小的数就是10015558。</p>\n<p>现给定数字，请编写程序输出能够组成的最小的数。</p>\n<p>输入格式：</p>\n<p>每个输入包含1个测试用例。每个测试用例在一行中给出10个非负整数，顺序表示我们拥有数字0、数字1、……数字9的个数。整数间用一个空格分隔。10个数字的总个数不超过50，且至少拥有1个非0的数字。</p>\n<p>输出格式：</p>\n<p>在一行中输出能够组成的最小的数。</p>\n<p>输入样例：\n2 2 0 0 0 3 0 0 1 0\n输出样例：\n10015558</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    #include \"stdio.h\"\n    //#include \"math.h\"\n    #include \"string.h\"\n    #include \"algorithm\"\n    using namespace std;\n    int num[10];//0-9的个数\n    int main(){\n        int cnt = 0;//位数\n        for (int i = 0; i &lt; 10; i++) {\n            scanf(\"%d\", &amp;num[i]);//读入数字\n            cnt++;\n        }\n        for (int i = 1; i &lt; 10; i++) {//第一位要在1-9之间找一个最小的输出\n            if (num[i]) {\n                printf(\"%d\", i);\n                num[i]--;\n                break;\n            }\n        }\n        for (int i = 0; i &lt; 10; i++) {\n            for (int j = 0; j &lt; num[i]; j++) {\n                printf(\"%d\", i);\n            }\n        }\n        return 0;\n    }</code></pre></div>","tableOfContents":"","frontmatter":{"title":"PAT B1023","date":"February 11, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/127/"},"frontmatter":{"title":"PAT A1048"}},"next":{"fields":{"slug":"/old-posts/130/"},"frontmatter":{"title":"PAT B1020/A1070"}}},"pageContext":{"id":"924861d7-443d-53f2-9ced-f2d1a9b01e71","previousPostId":"99d20e53-9831-5826-a546-c96c635ec88f","nextPostId":"6e349fd0-1c8e-5f9c-a486-4178a90f0237"}},
    "staticQueryHashes": ["2841359383","3257411868"]}