{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/100/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"5012a881-a2ab-5575-a9cb-de4618b555b3","excerpt":"To prepare for PAT, the judge sometimes has to generate random passwords for the users. The problem is that there are always some confusing passwords since it…","html":"<p>To prepare for PAT, the judge sometimes has to generate random passwords for the users. The problem is that there are always some confusing passwords since it is hard to distinguish 1 (one) from l (L in lowercase), or 0 (zero) from O (o in uppercase). One solution is to replace 1 (one) by @, 0 (zero) by %, l by L, and O by o. Now it is your job to write a program to check the accounts generated by the judge, and to help the juge modify the confusing passwords.</p>\n<p>Input Specification:</p>\n<p>Each input file contains one test case. Each case contains a positive integer N (&#x3C;= 1000), followed by N lines of accounts. Each account consists of a user name and a password, both are strings of no more than 10 characters with no space.</p>\n<p>Output Specification:</p>\n<p>For each test case, first print the number M of accounts that have been modified, then print in the following M lines the modified accounts info, that is, the user names and the corresponding modified passwords. The accounts must be printed in the same order as they are read in. If no account is modified, print in one line “There are N accounts and no account is modified” where N is the total number of accounts. However, if N is one, you must print “There is 1 account and no account is modified” instead.</p>\n<p>Sample Input 1:</p>\n<p>3\nTeam000002 Rlsp0dfa\nTeam000003 perfectpwd\nTeam000001 R1spOdfa\nSample Output 1:\n2\nTeam000002 RLsp%dfa\nTeam000001 R@spodfa\nSample Input 2:\n1\nteam110 abcdefg332\nSample Output 2:\nThere is 1 account and no account is modified\nSample Input 3:\n2\nteam110 abcdefg222\nteam220 abcdefg333\nSample Output 3:\nThere are 2 accounts and no account is modified</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#include \"stdio.h\"\n//#include \"math.h\"\n#include \"string.h\"\n//#include \"algorithm\"\n//using namespace std;\nstruct person{\n    char name[15];\n    char password[15];\n    bool ischange;\n}T[1005], temp;\nvoid crypt(person&amp; t, int&amp; cnt){//引用型\n    int passlen = (int)strlen(t.password);\n    for (int i = 0; i &lt; passlen; i++) {\n        switch (t.password[i]) {\n            case '1':\n                t.password[i] = '@';\n                t.ischange = true;\n                break;\n            case '0':\n                t.password[i] = '%';\n                t.ischange = true;\n                break;\n            case 'l':\n                t.password[i] = 'L';\n                t.ischange = true;\n                break;\n            case 'O':\n                t.password[i] = 'o';\n                t.ischange = true;\n                break;\n            default:\n                break;\n        }\n    }\n    if (t.ischange == true) {\n        cnt ++;\n    }\n\n}\nint main(){\n    int n,cnt = 0;\n    scanf(\"%d\", &amp;n);\n    for (int i = 0; i &lt; n; i++) {\n        scanf(\"%s %s\", T[i].name, T[i].password);\n        T[i].ischange = false;\n    }\n    for (int i = 0; i &lt; n; i++) {\n        crypt(T[i], cnt);\n    }\n    if (cnt == 0) {\n        if (n == 1){\n            printf(\"There is %d account and no account is modified\", n);\n        }else{\n            printf(\"There are %d accounts and no account is modified\", n);\n        }\n    }else{\n        printf(\"%d\\n\", cnt);\n        for (int i = 0; i &lt; n; i++) {\n            if (T[i].ischange) {\n                printf(\"%s %s\\n\", T[i].name, T[i].password);\n            }\n        }\n    }\n    \n    return 0;\n}</code></pre></div>\n<p>本题类似PAT B1031，但是不能像它那样写，这里要先输出修改过的密码个数\n所以本题用结构体来记录数据，用ischange来标记密码是否经过修改，并且自定义了一个函数crypt，引用型来修改结构体和计数器。\n此外，要区分没有修改密码情况下输出的语句单复数is/are。</p>","tableOfContents":"","frontmatter":{"title":"PAT A1035","date":"February 06, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/99/"},"frontmatter":{"title":"PAT A1005"}},"next":{"fields":{"slug":"/old-posts/101/"},"frontmatter":{"title":"PAT A1077"}}},"pageContext":{"id":"5012a881-a2ab-5575-a9cb-de4618b555b3","previousPostId":"b2be61c6-05f2-5130-868f-4c0a89ba1766","nextPostId":"40914cbf-0a9b-54a2-ab5e-5447bc75f27c"}},
    "staticQueryHashes": ["2841359383","3257411868"]}