{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/old-posts/71/",
    "result": {"data":{"site":{"siteMetadata":{"title":"何米酥`s Blog"}},"markdownRemark":{"id":"8c7fb56e-93cb-5043-a855-56ee5f4fe5f1","excerpt":"每个PAT…","html":"<p>每个PAT考生在参加考试时都会被分配两个座位号，一个是试机座位，一个是考试座位。正常情况下，考生在入场时先得到试机座位号码，入座进入试机状态后，系统会显示该考生的考试座位号码，考试时考生需要换到考试座位就座。但有些考生迟到了，试机已经结束，他们只能拿着领到的试机座位号码求助于你，从后台查出他们的考试座位号码。</p>\n<p>输入格式：</p>\n<p>输入第一行给出一个正整数N（&#x3C;=1000），随后N行，每行给出一个考生的信息：“准考证号 试机座位号 考试座位号”。其中准考证号由14位数字组成，座位从1到N编号。输入保证每个人的准考证号都不同，并且任何时候都不会把两个人分配到同一个座位上。</p>\n<p>考生信息之后，给出一个正整数M（&#x3C;=N），随后一行中给出M个待查询的试机座位号码，以空格分隔。</p>\n<p>输出格式：</p>\n<p>对应每个需要查询的试机座位号码，在一行中输出对应考生的准考证号和考试座位号码，中间用1个空格分隔。</p>\n<p>输入样例：\n4\n10120150912233 2 4\n10120150912119 4 1\n10120150912126 1 3\n10120150912002 3 2\n2\n3 4\n输出样例：\n10120150912002 2\n10120150912119 1</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#include \"stdio.h\"\n//#include \"algorithm\"\n//using namespace std;\nstruct{\n    long long testid;\n    int sj;\n    int ks;\n}stu[1010];\nint main(){\n    int n,search;\n    scanf(\"%d\", &amp;n);\n    for (int i = 0; i &lt; n; i++) {\n        scanf(\"%lld%d%d\", &amp;stu[i].testid, &amp;stu[i].sj, &amp;stu[i].ks);\n    }\n//    for (int i = 0; i &lt; n; i++) {\n//        printf(\"%lld %d %d\\n\", stu[i].testid, stu[i].sj, stu[i].ks);\n//    }\n    scanf(\"%d\", &amp;search);\n    while (search--) {\n        int sj;\n        scanf(\"%d\", &amp;sj);\n        for (int i = 0; i &lt; n; i++) {\n            if (sj == stu[i].sj) {\n                printf(\"%lld %d\\n\",stu[i].testid, stu[i].ks);\n            }\n        }\n    }\n    return 0;\n}</code></pre></div>\n<p>算法笔记代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#include \"stdio.h\"\n//#include \"algorithm\"\n//using namespace std;\nstruct{\n    long long testid;\n    int ks;\n}stu[1010];\nint main(){\n    int n,search;\n    scanf(\"%d\", &amp;n);\n    for (int i = 0; i &lt; n; i++) {\n        long long testid;\n        int sj;\n        int ks;\n        scanf(\"%lld%d%d\", &amp;testid, &amp;sj, &amp;ks);\n        stu[sj].testid = testid;\n        stu[sj].ks = ks;\n    }\n//    for (int i = 0; i &lt; n; i++) {\n//        printf(\"%lld %d %d\\n\", stu[i].testid, stu[i].sj, stu[i].ks);\n//    }\n    scanf(\"%d\", &amp;search);\n    while (search--) {\n        int sj;\n        scanf(\"%d\", &amp;sj);\n        printf(\"%lld %d\\n\",stu[sj].testid, stu[sj].ks);\n    }\n    return 0;\n}</code></pre></div>\n<p>收获：\n需要试机座位号来查询考生且座位号不会重复，所以可以用把试机座位号作为数组的下标，避免查找的时候轮询节省时间。\n注意点：\n准考证号14位数字，可以用longlong来存放。\nint -2<em>10^9~2</em>10^9\nlonglong -9<em>10^18~9</em>10^18</p>","tableOfContents":"","frontmatter":{"title":"PAT B1041","date":"February 01, 2017","description":null}},"previous":{"fields":{"slug":"/old-posts/70/"},"frontmatter":{"title":"PAT A1002"}},"next":{"fields":{"slug":"/old-posts/73/"},"frontmatter":{"title":"PAT B1028"}}},"pageContext":{"id":"8c7fb56e-93cb-5043-a855-56ee5f4fe5f1","previousPostId":"9718115f-bfe7-5602-bfe1-7959c6cc3b6a","nextPostId":"74cd43bd-c13e-5a68-9802-232f54c2fb35"}},
    "staticQueryHashes": ["2841359383","3257411868"]}